{"version":3,"sources":["utils/spotify.ts","serviceWorker.ts","components/router/index.tsx","mappers/playlist.ts","contexts/playlist.tsx","contexts/index.tsx","index.tsx","contexts/event.tsx","services/gtm.ts","services/storage.ts","contexts/user.tsx","mappers/image.ts","mappers/music.ts","utils/timer.ts","utils/player.ts","contexts/player.tsx","components/loader/loader.svg","components/loader/index.tsx","services/message.ts","mappers/search.ts","contexts/search.tsx","contexts/auth.tsx","contexts/activity.tsx","contexts/feeling.tsx","contexts/location.tsx","services/request.ts","utils/string.ts"],"names":["a","Promise","resolve","reject","script","document","createElement","src","charset","async","onload","onerror","body","appendChild","SpotifyUtil","url","URL","process","searchParams","set","getSpotifyRedirectUrl","this","SCOPES","join","toString","accessToken","window","onSpotifyWebPlaybackSDKReady","player","Spotify","Player","name","getOAuthToken","cb","addListener","message","device_id","original","connect","loadSpotifyScripts","catch","redirectUrl","search","hash","slice","length","get","expiresInSeconds","Number","tokenType","Error","Boolean","location","hostname","match","ContextIntro","children","rest","isAuthenticated","useAuth","render","cookieService","CONTEXT_COOKIE_NAME","to","pathname","state","from","PrivateRoute","NonAuthRoute","PlaylistMapper","id","description","images","tracks","title","StringUtil","sliceIfNeed","image","alt","musics","items","map","t","MusicMapper","toMusic","track","PlaylistContext","createContext","spotifyPlaylistsEndpoint","getApiUrl","spotifyLoadPlaylistEndpoint","PlaylistProvider","props","useUser","profile","requestService","playlistId","musicsIds","post","data","uris","toBasicPlaylist","toPlaylist","newName","put","Provider","value","addMusics","create","load","loadAll","rename","AppProviders","Home","React","lazy","Welcome","Login","LoginRedirectSpotify","Logout","Artists","Gender","Feeling","Activity","Location","MusicSearch","theme","createMuiTheme","palette","primary","main","secondary","indigo","ReactDOM","fallback","ThemeProvider","path","exact","key","type","getElementById","navigator","serviceWorker","ready","then","registration","unregister","error","console","EventType","gtmService","eventName","customProps","tagsWereNotFired","dataLayer","push","event","log","ex","apiEndpoint","REACT_APP_API_HOST","eventApiEndpoint","UserContext","eventsHistory","EventsProvider","spotifyUserUri","uri","hasToSaveTheEvent","sendEvent","lastEvent","PAUSE_MUSIC","PLAY_MUSIC","save","useEvents","useContext","cookie","includes","start","indexOf","substring","split","decodeURIComponent","expires","date","Date","setTime","getTime","toUTCString","spotifyUserEndpoint","UserProvider","useState","setProfile","email","display_name","link","external_urls","spotify","avatarSrc","tryToSaveAtApi","spotifyUri","endpoint","devices","basicUser","useEffect","getAvailableDevices","ImageMapper","album","toCustom","TimerUtil","callback","wait","timeout","params","clearTimeout","setTimeout","time","musicHistory","PlayerUtil","track_window","current_track","next_tracks","previous_tracks","lastMusic","position","RESTART_MUSIC","paused","returned","some","CHANGE_TO_NEXT_MUSIC","CHANGE_TO_PREVIOUS_MUSIC","MusicContext","debounce","saveEvent","stateToEvent","PlayerProvider","setPlayer","isPluginPlayerActive","setIsPluginPlayerActive","isPlayerReady","setIsPlayerReady","playingMusicInfo","setPlayingMusicInfo","createSpotifyPlayerIfNeed","createPlayer","loadCurrentPlayerInfo","getCurrentPlayerInfo","currentPlayer","device","nextTrack","previousTrack","togglePlay","device_ids","createSpotifyPlayerIfNeedAndValidatePlayer","messageService","alert","duration","currentTrack","toMusicTrack","transferUserPlaybackToPlugin","usePlayer","_extends","Object","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","_ref3","className","d","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref","svgRef","viewBox","ref","undefined","ForwardRef","forwardRef","Loader","SearchMapper","SearchContext","spotifySearchEndpoint","SearchProvider","text","q","artists","toArtist","searchArtists","searchMusic","useSearch","AuthContext","AuthProvider","setAccessToken","SpotifyRequestService","setRequestService","setIsAuthenticated","isEmpty","logout","delete","saveToken","getTokenAndInfoFromRedirectUrl","newAccessToken","USE_API","REACT_APP_USE_API_TO_LOAD_ACTIVITY","baseHost","ActivityContext","ActivityProvider","searchFromApi","searchFromJson","filter","l","toLowerCase","toKebabCase","useActivity","REACT_APP_USE_API_TO_LOAD_FEELINGS","FeelingContext","FeelingProvider","useFeeling","REACT_APP_USE_API_TO_LOAD_LOCATION","LocationContext","LocationProvider","useLocation","RequestService","getRequest","request","parseRequest","axios","response","mapAxiosToResponse","postRequest","method","putRequest","isString","headers","status","Authorization","any","trim","str","size","normalize","replace","def"],"mappings":"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","file":"static/js/main.1d0dbf56.chunk.js","sourcesContent":["\r\nexport interface SpotifyToken {\r\n  accessToken: string;\r\n  expiresInSeconds: number;\r\n  tokenType: string;\r\n}\r\n\r\nexport interface SpotifyPlayer {\r\n  device_id: string;\r\n  original: Spotify.SpotifyPlayer;\r\n}\r\n\r\nasync function loadSpotifyScripts() {\r\n  return new Promise((resolve, reject) => {\r\n    const script = document.createElement(\"script\");\r\n\r\n    script.src = 'https://sdk.scdn.co/spotify-player.js';\r\n    script.charset = \"utf-8\";\r\n    script.async = true;\r\n    script.onload = () => resolve();\r\n    script.onerror = () => reject();\r\n\r\n    document.body.appendChild(script);\r\n  })\r\n}\r\n\r\nexport class SpotifyUtil {\r\n  static SCOPES = [\r\n    \"playlist-modify-private\",\r\n    \"playlist-modify-public\",\r\n    \"playlist-read-private\",\r\n    \"streaming\",\r\n    \"user-library-read\",\r\n    \"user-read-email\",\r\n    \"user-read-playback-state\",\r\n    \"user-read-private\",\r\n    \"user-read-recently-played\",\r\n    \"user-top-read\",\r\n  ];\r\n\r\n  static createSpotifyAuthUrl(): string {\r\n    if (!process.env.REACT_APP_SPOTIFY_AUTH_URL) {\r\n      throw new Error(\"you need to set spotify url\");\r\n    }\r\n\r\n    if (!process.env.REACT_APP_SPOTIFY_CLIENT_ID) {\r\n      throw new Error(\"you need to set spotify client id\");\r\n    }\r\n\r\n    var url = new URL(process.env.REACT_APP_SPOTIFY_AUTH_URL);\r\n\r\n    url.searchParams.set(\"client_id\", process.env.REACT_APP_SPOTIFY_CLIENT_ID);\r\n    url.searchParams.set(\"response_type\", \"token\");\r\n    url.searchParams.set(\"redirect_uri\", SpotifyUtil.getSpotifyRedirectUrl());\r\n    url.searchParams.set(\"scope\", this.SCOPES.join(\" \"));\r\n\r\n    return url.toString();\r\n  }\r\n\r\n  static createPlayer(accessToken: string): Promise<SpotifyPlayer> {\r\n    return new Promise((resolve, reject) => {\r\n      window.onSpotifyWebPlaybackSDKReady = () => {\r\n        const player = new Spotify.Player({\r\n          name: 'Spotify plugin',\r\n          getOAuthToken: cb => { cb(accessToken); }\r\n        });\r\n\r\n        // Error handling\r\n        player.addListener('initialization_error', ({ message }) => reject(message));\r\n        player.addListener('authentication_error', ({ message }) => reject(message));\r\n        player.addListener('account_error', ({ message }) => reject(message));\r\n        player.addListener('playback_error', ({ message }) => reject(message));\r\n        player.addListener('not_ready', ({ device_id }) => reject(`Device ID has gone offline ${device_id}`))\r\n\r\n        // Ready\r\n        player.addListener('ready', ({ device_id }) => resolve({ device_id, original: player }));\r\n\r\n        // Connect to the player!\r\n        player.connect();\r\n      };\r\n\r\n      loadSpotifyScripts().catch(reject);\r\n    })\r\n  }\r\n\r\n  static getApiUrl(): string {\r\n    return process.env.REACT_APP_SPOTIFY_API_URL || \"https://api.spotify.com/v1\";\r\n  }\r\n\r\n  static getTokenAndInfoFromRedirectUrl(redirectUrl: string): SpotifyToken {\r\n    var url = new URL(redirectUrl);\r\n\r\n    url.search = url.hash.slice(2, url.hash.length);\r\n\r\n    const accessToken = url.searchParams.get(\"access_token\");\r\n    const expiresInSeconds = Number(url.searchParams.get(\"expires_in\"));\r\n    const tokenType = url.searchParams.get(\"token_type\");\r\n\r\n    if (!accessToken || !expiresInSeconds || !tokenType) {\r\n      throw new Error(\"Invalid redirect parameter\");\r\n    }\r\n\r\n    return {\r\n      accessToken,\r\n      expiresInSeconds,\r\n      tokenType,\r\n    };\r\n  }\r\n\r\n  private static getSpotifyRedirectUrl(): string {\r\n    if (!process.env.REACT_APP_HOST_URL) {\r\n      throw new Error(\"you need to set spotify client id\");\r\n    }\r\n\r\n    var url = new URL(process.env.REACT_APP_HOST_URL);\r\n\r\n    url.hash = \"/login-redirect-spotify\";\r\n\r\n    return url.toString();\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { cookieService } from \"../../services/storage\";\r\n\r\nexport function ContextIntro({ children, ...rest }: any) {\r\n  const { isAuthenticated } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        !isAuthenticated || cookieService.get(cookieService.CONTEXT_COOKIE_NAME) === \"true\" ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/new-context\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport function PrivateRoute({ children, ...rest }: any) {\r\n  const { isAuthenticated } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/welcome\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport function NonAuthRoute({ children, ...rest }: any) {\r\n  const { isAuthenticated } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        !isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","import { BasicPlaylist, Playlist } from \"../@types/playlist\";\r\nimport { PlaylistItem } from \"../@types/spotify\";\r\nimport { StringUtil } from \"../utils/string\";\r\nimport { MusicMapper } from \"./music\";\r\n\r\nexport class PlaylistMapper {\r\n  static toPlaylist({\r\n    id,\r\n    name,\r\n    description,\r\n    images,\r\n    tracks,\r\n  }: import(\"../@types/spotify\").SpotifyLoadPlaylistResponse): Playlist {\r\n    return {\r\n      id,\r\n      title: name,\r\n      description: StringUtil.sliceIfNeed(description),\r\n      image: {\r\n        alt: name,\r\n        src: images[0]?.url,\r\n      },\r\n      musics: tracks.items.map((t) => MusicMapper.toMusic(t.track)),\r\n    };\r\n  }\r\n\r\n  static toBasicPlaylist({ id, name, images, description }: PlaylistItem): BasicPlaylist {\r\n    return {\r\n      id,\r\n      title: name,\r\n      description: StringUtil.sliceIfNeed(description),\r\n      image: {\r\n        alt: name,\r\n        src: images[0]?.url,\r\n      },\r\n    };\r\n  }\r\n}\r\n","import React, { createContext, useContext } from \"react\";\r\nimport { useAuth } from \"./auth\";\r\n\r\nimport { SpotifyUtil } from \"../utils/spotify\";\r\nimport { PlaylistMapper } from \"../mappers/playlist\";\r\nimport { BasicPlaylist, Playlist } from \"../@types/playlist\";\r\nimport { SpotifyLoadPlaylistResponse, SpotifyLoadUserPlaylistsResponse } from \"../@types/spotify\";\r\nimport { useUser } from \"./user\";\r\n\r\ninterface Props {}\r\n\r\ninterface Context {\r\n  addMusics: (playlistId: string, musicsIds: string[]) => Promise<void>;\r\n  create: () => Promise<string>;\r\n  loadAll: () => Promise<BasicPlaylist[]>;\r\n  load: (id: string) => Promise<Playlist>;\r\n  rename: (playlistId: string, newName: string) => Promise<void>;\r\n}\r\n\r\nconst PlaylistContext = createContext({} as any);\r\nconst spotifyPlaylistsEndpoint = `${SpotifyUtil.getApiUrl()}/me/playlists`;\r\nconst spotifyLoadPlaylistEndpoint = `${SpotifyUtil.getApiUrl()}/playlists`;\r\n\r\nexport function PlaylistProvider(props: Props) {\r\n  const {\r\n    profile: { id },\r\n  } = useUser();\r\n  const { requestService } = useAuth();\r\n\r\n  async function addMusics(playlistId: string, musicsIds: string[]): Promise<void> {\r\n    await requestService.post({\r\n      url: `${spotifyLoadPlaylistEndpoint}/${playlistId}/tracks`,\r\n      data: {\r\n        uris: musicsIds,\r\n      },\r\n    });\r\n  }\r\n\r\n  async function create(): Promise<string> {\r\n    const { data } = await requestService.post<SpotifyLoadPlaylistResponse>({\r\n      url: `${SpotifyUtil.getApiUrl()}/users/${id}/playlists`,\r\n      data: {\r\n        name: \"Nova playlist\",\r\n      },\r\n    });\r\n\r\n    return data.id;\r\n  }\r\n\r\n  async function loadAll(): Promise<BasicPlaylist[]> {\r\n    const { data } = await requestService.get<SpotifyLoadUserPlaylistsResponse>({\r\n      url: spotifyPlaylistsEndpoint,\r\n    });\r\n\r\n    return data.items.map(PlaylistMapper.toBasicPlaylist);\r\n  }\r\n\r\n  async function load(id: string): Promise<Playlist> {\r\n    const { data } = await requestService.get<SpotifyLoadPlaylistResponse>({\r\n      url: `${spotifyLoadPlaylistEndpoint}/${id}`,\r\n    });\r\n\r\n    return PlaylistMapper.toPlaylist(data);\r\n  }\r\n\r\n  async function rename(playlistId: string, newName: string): Promise<void> {\r\n    await requestService.put({\r\n      url: `${spotifyLoadPlaylistEndpoint}/${playlistId}`,\r\n      data: {\r\n        name: newName,\r\n      },\r\n    });\r\n  }\r\n\r\n  return <PlaylistContext.Provider value={{ addMusics, create, load, loadAll, rename }} {...props} />;\r\n}\r\n\r\nexport const usePlaylist = () => useContext<Context>(PlaylistContext);\r\n","import React from \"react\";\r\n\r\nimport { ActivityProvider } from \"./activity\";\r\nimport { AuthProvider } from \"./auth\";\r\nimport { EventsProvider } from \"./event\";\r\nimport { FeelingProvider } from \"./feeling\";\r\nimport { LocationProvider } from \"./location\";\r\nimport { PlayerProvider } from \"./player\";\r\nimport { PlaylistProvider } from \"./playlist\";\r\nimport { SearchProvider } from \"./search\";\r\nimport { UserProvider } from \"./user\";\r\n\r\ninterface Props {\r\n  children: JSX.Element;\r\n}\r\n\r\nexport function AppProviders({ children }: Props) {\r\n  return (\r\n    <AuthProvider>\r\n      <UserProvider>\r\n        <EventsProvider>\r\n          <PlaylistProvider>\r\n            <PlayerProvider>\r\n              <FeelingProvider>\r\n                <ActivityProvider>\r\n                  <LocationProvider>\r\n                    <SearchProvider>{children}</SearchProvider>\r\n                  </LocationProvider>\r\n                </ActivityProvider>\r\n              </FeelingProvider>\r\n            </PlayerProvider>\r\n          </PlaylistProvider>\r\n        </EventsProvider>\r\n      </UserProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n","import React, { Suspense, StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { HashRouter, Switch } from \"react-router-dom\";\r\nimport { Loader } from \"./components/loader\";\r\nimport { PrivateRoute, NonAuthRoute, ContextIntro } from \"./components/router\";\r\nimport { AppProviders } from \"./contexts\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { indigo } from \"@material-ui/core/colors\";\r\n\r\nconst Home = React.lazy(() => import(\"./pages/home\"));\r\nconst Welcome = React.lazy(() => import(\"./pages/welcome\"));\r\nconst Login = React.lazy(() => import(\"./pages/login\"));\r\nconst LoginRedirectSpotify = React.lazy(() => import(\"./pages/login-redirect-spotify\"));\r\nconst Logout = React.lazy(() => import(\"./pages/logout\"));\r\nconst Artists = React.lazy(() => import(\"./pages/artists\"));\r\nconst Gender = React.lazy(() => import(\"./pages/genre\"));\r\nconst Feeling = React.lazy(() => import(\"./pages/feeling\"));\r\nconst Activity = React.lazy(() => import(\"./pages/activity\"));\r\nconst Location = React.lazy(() => import(\"./pages/location\"));\r\nconst MusicSearch = React.lazy(() => import(\"./pages/music-search\"));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#282828\",\r\n    },\r\n    secondary: indigo,\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <Suspense fallback={<Loader />}>\r\n      <AppProviders>\r\n        <ThemeProvider theme={theme}>\r\n          <HashRouter>\r\n            <Switch>\r\n              <NonAuthRoute path=\"/login\">\r\n                <Login />\r\n              </NonAuthRoute>\r\n              <NonAuthRoute path=\"/login-redirect-spotify\">\r\n                <LoginRedirectSpotify />\r\n              </NonAuthRoute>\r\n              <NonAuthRoute exact path=\"/:access_token(access_token=.*)\">\r\n                <LoginRedirectSpotify />\r\n              </NonAuthRoute>\r\n              <NonAuthRoute path=\"/welcome\">\r\n                <Welcome />\r\n              </NonAuthRoute>\r\n              <PrivateRoute path=\"/new-context\" exact>\r\n                <Feeling key=\"feeling\" type=\"feeling\" />\r\n              </PrivateRoute>\r\n              <PrivateRoute path=\"/new-context/want-to-fell-like\">\r\n                <Feeling key=\"want-to-fell-like\" type=\"want-to-fell-like\" />\r\n              </PrivateRoute>\r\n              <PrivateRoute path=\"/new-context/activity\">\r\n                <Activity />\r\n              </PrivateRoute>\r\n              <PrivateRoute path=\"/new-context/location\">\r\n                <Location />\r\n              </PrivateRoute>\r\n              <ContextIntro>\r\n                <PrivateRoute path=\"/music-search\">\r\n                  <MusicSearch />\r\n                </PrivateRoute>\r\n                <PrivateRoute path=\"/gender\">\r\n                  <Gender />\r\n                </PrivateRoute>\r\n                <PrivateRoute path=\"/artists\">\r\n                  <Artists />\r\n                </PrivateRoute>\r\n                <PrivateRoute path=\"/logout\">\r\n                  <Logout />\r\n                </PrivateRoute>\r\n                <PrivateRoute path=\"/\" exact>\r\n                  <Home />\r\n                </PrivateRoute>\r\n              </ContextIntro>\r\n            </Switch>\r\n          </HashRouter>\r\n        </ThemeProvider>\r\n      </AppProviders>\r\n    </Suspense>\r\n  </StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { createContext, useContext } from \"react\";\r\n\r\nimport { gtmService } from \"../services/gtm\";\r\nimport { requestService } from \"../services/request\";\r\nimport { useUser } from \"./user\";\r\n\r\ninterface Props {}\r\n\r\nexport enum EventType {\r\n  CHANGE_MUSIC_TIME = \"CHANGE_MUSIC_TIME\",\r\n  CHANGE_TO_NEXT_MUSIC = \"CHANGE_TO_NEXT_MUSIC\",\r\n  CHANGE_TO_PREVIOUS_MUSIC = \"CHANGE_TO_PREVIOUS_MUSIC\",\r\n  CHOOSE_ACTIVITY = \"CHOOSE_ACTIVITY\",\r\n  CHOOSE_FEELING = \"CHOOSE_FEELING\",\r\n  CHOOSE_FEELING_TO_BE_LIKE = \"CHOOSE_FEELING_TO_BE_LIKE\",\r\n  CHOOSE_LOCATION = \"CHOOSE_LOCATION\",\r\n  HATED_MUSIC = \"HATED_MUSIC\",\r\n  HIDE_DETAILS = \"HIDE_DETAILS\",\r\n  LIKED_ARTIST = \"LIKED_ARTIST\",\r\n  LIKED_GENRE = \"LIKED_GENRE\",\r\n  LIKED_MUSIC = \"LIKED_MUSIC\",\r\n  LOAD_LOCATION = \"LOAD_LOCATION\",\r\n  PAUSE_MUSIC = \"PAUSE_MUSIC\",\r\n  PLAY_MUSIC = \"PLAY_MUSIC\",\r\n  RESTART_MUSIC = \"RESTART_MUSIC\",\r\n  SHOW_DETAILS = \"SHOW_DETAILS\",\r\n}\r\n\r\ninterface Context {\r\n  save: (type: EventType, value?: string) => Promise<void>;\r\n}\r\n\r\nconst apiEndpoint = process.env.REACT_APP_API_HOST || \"https://localhost:44301/api\";\r\nconst eventApiEndpoint = `${apiEndpoint}/UserEvents`;\r\n\r\nconst UserContext = createContext({} as any);\r\nconst useGTM = process.env.REACT_APP_USE_GTM !== \"false\";\r\nconst eventsHistory: EventType[] = [];\r\n\r\nexport function EventsProvider(props: Props) {\r\n  const { profile } = useUser();\r\n  const spotifyUserUri = profile.uri;\r\n\r\n  async function save(type: EventType, value?: string): Promise<void> {\r\n    const data = { type, value, spotifyUserUri };\r\n\r\n    if (hasToSaveTheEvent(type)) {\r\n      if (useGTM) {\r\n        gtmService.sendEvent(\"USER_ACTION\", data);\r\n      } else {\r\n        await requestService.post({ url: eventApiEndpoint, data });\r\n      }\r\n    }\r\n  }\r\n\r\n  function hasToSaveTheEvent(type: EventType) {\r\n    const lastEvent = eventsHistory[eventsHistory.length - 1];\r\n\r\n    eventsHistory.push(type);\r\n\r\n    return !(type === lastEvent && (type === EventType.PAUSE_MUSIC || type === EventType.PLAY_MUSIC));\r\n  }\r\n\r\n  return <UserContext.Provider value={{ save }} {...props} />;\r\n}\r\n\r\nexport const useEvents = () => useContext<Context>(UserContext);\r\n","interface DataLayer {\r\n  event?: string\r\n}\r\n\r\ndeclare const dataLayer: DataLayer[]\r\n\r\nclass GtmService {\r\n  sendEvent(eventName: string, customProps: object = {}): boolean {\r\n    let tagsWereNotFired = false\r\n\r\n    try {\r\n      tagsWereNotFired = !!dataLayer.push({\r\n        event: eventName,\r\n        ...customProps,\r\n      })\r\n\r\n      if (tagsWereNotFired) {\r\n        console.log('There is no gtm tags for the event: ', eventName)\r\n      }\r\n    } catch (ex) {\r\n      console.log('There was a problem to send the gtm event ', ex)\r\n    }\r\n\r\n    return tagsWereNotFired\r\n  }\r\n}\r\n\r\nexport const gtmService = new GtmService()","class CookieService {\r\n  public readonly CONTEXT_COOKIE_NAME = \"FilledTheContext\";\r\n\r\n  delete(key: string): void {\r\n    document.cookie = key + \"=; expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n  }\r\n\r\n  get(key: string): string {\r\n    const { cookie } = document;\r\n\r\n    let value = \"\";\r\n\r\n    if (cookie.includes(key)) {\r\n      const start = cookie.indexOf(key);\r\n\r\n      value = cookie.substring(start).split(\";\", 1)[0].split(\"=\")[1];\r\n    }\r\n\r\n    return decodeURIComponent(value);\r\n  }\r\n\r\n  save(key: string, value: string, expiresInSeconds?: number): void {\r\n    let expires = \"\";\r\n\r\n    if (!!expiresInSeconds) {\r\n      const date = new Date();\r\n      date.setTime(date.getTime() + expiresInSeconds * 1000);\r\n      expires = \"; expires=\" + date.toUTCString();\r\n    }\r\n\r\n    document.cookie = `${key}=${value}${expires}; path=/`;\r\n  }\r\n}\r\n\r\nexport const cookieService = new CookieService();\r\n","import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { useAuth } from \"./auth\";\r\n\r\nimport { SpotifyUserGetResponse, SpotifyDevicesResponse, SpotifyDevice } from \"../@types/spotify\";\r\nimport { SpotifyUtil } from \"../utils/spotify\";\r\n\r\ninterface Props {}\r\n\r\nexport interface User {\r\n  id: string;\r\n  avatarSrc: string;\r\n  email: string;\r\n  name: string;\r\n  link: string;\r\n  uri: string;\r\n}\r\n\r\ninterface BasicUser {\r\n  spotifyUri: string;\r\n  name: string;\r\n  avatarSrc: string;\r\n}\r\n\r\ninterface Context {\r\n  getAvailableDevices: () => Promise<SpotifyDevice[]>;\r\n  profile: User;\r\n}\r\n\r\nconst UserContext = createContext({} as any);\r\nconst spotifyUserEndpoint = `${SpotifyUtil.getApiUrl()}/me`;\r\n\r\nconst apiEndpoint = process.env.REACT_APP_API_HOST || \"https://localhost:44301/api\";\r\nconst userApiEndpoint = `${apiEndpoint}/user`;\r\nconst useGTM = process.env.REACT_APP_USE_GTM !== \"false\";\r\n\r\nexport function UserProvider(props: Props) {\r\n  const { isAuthenticated, requestService } = useAuth();\r\n  const [profile, setProfile] = useState<User>({} as any);\r\n\r\n  async function load(): Promise<void> {\r\n    const { data } = await requestService.get<SpotifyUserGetResponse>(spotifyUserEndpoint);\r\n    const {\r\n      id,\r\n      email,\r\n      display_name: name,\r\n      external_urls: { spotify: link },\r\n      images,\r\n      uri,\r\n    } = data;\r\n    const avatarSrc = images[0]?.url;\r\n\r\n    setProfile({ id, email, name, link, avatarSrc, uri });\r\n\r\n    tryToSaveAtApi({ avatarSrc, spotifyUri: uri, name });\r\n  }\r\n\r\n  async function getAvailableDevices(): Promise<SpotifyDevice[]> {\r\n    const endpoint = `${spotifyUserEndpoint}/player/devices`;\r\n    const { data } = await requestService.get<SpotifyDevicesResponse>(endpoint);\r\n\r\n    return data.devices;\r\n  }\r\n\r\n  async function tryToSaveAtApi(basicUser: BasicUser): Promise<void> {\r\n    if (!useGTM) { \r\n      await requestService.post({\r\n        url: userApiEndpoint,\r\n        data: basicUser,\r\n      });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      load();\r\n    } else {\r\n      setProfile({} as any);\r\n    } // eslint-disable-next-line\r\n  }, [isAuthenticated]);\r\n\r\n  return <UserContext.Provider value={{ getAvailableDevices, profile }} {...props} />;\r\n}\r\n\r\nexport const useUser = () => useContext<Context>(UserContext);\r\n","import { SpotifyImage } from \"../@types/spotify\";\r\nimport { CustomImage } from \"../@types/music\";\r\n\r\nexport class ImageMapper {\r\n  static toCustom(alt: string, images: SpotifyImage[]): CustomImage {\r\n    return {\r\n      alt,\r\n      src: images[0]?.url,\r\n    };\r\n  }\r\n}\r\n","import { ImageMapper } from \"./image\";\r\nimport { Music, Album } from \"../@types/music\";\r\nimport { SpotifyTracksSearchItem, SpotifyImage } from \"../@types/spotify\";\r\n\r\nexport class MusicMapper {\r\n  static toMusicTrack({ name, album, uri }: Spotify.Track): Music {\r\n    return {\r\n      id: uri,\r\n      image: ImageMapper.toCustom(name, album.images as SpotifyImage[]),\r\n      name,\r\n      album: {\r\n        id: album.uri,\r\n        name: album.name,\r\n        image: ImageMapper.toCustom(album.name, album.images as SpotifyImage[]),\r\n      },\r\n      uri,\r\n    };\r\n  }\r\n\r\n  static toMusic({ id, name, album, uri }: SpotifyTracksSearchItem): Music {\r\n    return {\r\n      id,\r\n      image: ImageMapper.toCustom(name, album.images),\r\n      name,\r\n      album: {\r\n        id: album.id,\r\n        name: album.name,\r\n        image: ImageMapper.toCustom(album.name, album.images),\r\n      },\r\n      uri,\r\n    };\r\n  }\r\n\r\n  static toAlbum({ id, name, images }: import(\"../@types/spotify\").SpotifyAlbum): Album {\r\n    return {\r\n      id,\r\n      name,\r\n      image: ImageMapper.toCustom(name, images),\r\n    };\r\n  }\r\n}\r\n","export class TimerUtil {\r\n  static debounce(callback: Function, wait: number): Function {\r\n    let timeout: NodeJS.Timeout | null;\r\n\r\n    return (...params: any[]): void => {\r\n      if (timeout != null) {\r\n        clearTimeout(timeout);\r\n      }\r\n\r\n      timeout = setTimeout((): void => {\r\n        timeout = null;\r\n        callback(...params);\r\n      }, wait);\r\n    };\r\n  }\r\n\r\n  static async wait(time: number): Promise<void> {\r\n    return new Promise((resolve) => setTimeout(() => resolve(), time));\r\n  }\r\n}\r\n","import { EventType } from \"../contexts/event\";\r\n\r\nconst musicHistory: string[] = [];\r\n\r\nexport class PlayerUtil {\r\n  static stateToEvent(state: Spotify.PlaybackState): { type: EventType, value: string } {\r\n    const { current_track, next_tracks, previous_tracks } = state?.track_window;\r\n    const lastMusic = musicHistory[musicHistory.length - 1]\r\n    const value = current_track.uri;\r\n    let type = EventType.PLAY_MUSIC\r\n\r\n    if (value == null)\r\n      throw new Error(\"Invalid current track\");\r\n\r\n    if (state?.position <= 1000)\r\n      type = EventType.RESTART_MUSIC\r\n\r\n    if (state.paused)\r\n      type = EventType.PAUSE_MUSIC\r\n    else if (lastMusic != null) {\r\n      const returned = next_tracks.some(t => t.uri === lastMusic)\r\n      const passed = previous_tracks.some(t => t.uri === lastMusic)\r\n\r\n      if (passed)\r\n        type = EventType.CHANGE_TO_NEXT_MUSIC\r\n      else if (returned)\r\n        type = EventType.CHANGE_TO_PREVIOUS_MUSIC\r\n    }\r\n\r\n    if (lastMusic !== value)\r\n      musicHistory.push(value)\r\n\r\n    return {\r\n      type,\r\n      value\r\n    }\r\n  }\r\n}\r\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\nimport { useAuth } from \"./auth\";\r\nimport { SpotifyUtil, SpotifyPlayer } from \"../utils/spotify\";\r\nimport { Music } from \"../@types/music\";\r\nimport { MusicMapper } from \"../mappers/music\";\r\nimport { SpotifyPlayerResponse } from \"../@types/spotify\";\r\nimport { TimerUtil } from \"../utils/timer\";\r\nimport { PlayerUtil } from \"../utils/player\";\r\nimport { useEvents } from \"./event\";\r\nimport { messageService } from \"../services/message\";\r\n\r\ninterface Props {}\r\n\r\ninterface Context {\r\n  isPlayerReady: boolean;\r\n  isPluginPlayerActive: boolean;\r\n  nextTrack: () => Promise<void>;\r\n  playingMusicInfo?: PlayingMusicInfo;\r\n  previousTrack: () => Promise<void>;\r\n  togglePlay: () => Promise<void>;\r\n  transferUserPlaybackToPlugin: () => Promise<void>;\r\n}\r\n\r\nexport interface PlayingMusicInfo {\r\n  position: number;\r\n  duration: number;\r\n  currentTrack: Music;\r\n  paused: boolean;\r\n}\r\n\r\nconst MusicContext = createContext<Context>({} as any);\r\nconst spotifyUserEndpoint = `${SpotifyUtil.getApiUrl()}/me`;\r\n\r\nconst debounce = TimerUtil.debounce((state: Spotify.PlaybackState, saveEvent: Function) => {\r\n  var { type, value } = PlayerUtil.stateToEvent(state);\r\n\r\n  saveEvent(type, value);\r\n}, 1000);\r\n\r\nexport function PlayerProvider(props: Props) {\r\n  const { accessToken, isAuthenticated, requestService } = useAuth();\r\n  const [player, setPlayer] = useState<SpotifyPlayer | null>(null);\r\n  const [isPluginPlayerActive, setIsPluginPlayerActive] = useState<any>(null);\r\n  const [isPlayerReady, setIsPlayerReady] = useState<any>(null);\r\n  const [playingMusicInfo, setPlayingMusicInfo] = useState<PlayingMusicInfo | undefined>();\r\n  const { save: saveEvent } = useEvents();\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      createSpotifyPlayerIfNeedAndValidatePlayer();\r\n    } // eslint-disable-next-line\r\n  }, [accessToken, isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    setIsPlayerReady(player != null);\r\n\r\n    if (player != null) {\r\n      player.original.addListener(\"player_state_changed\", (state) => {\r\n        if (state == null) {\r\n          setIsPluginPlayerActive(false);\r\n          messageService.alert(\"Você foi desconectado!\");\r\n        } else {\r\n          const {\r\n            position,\r\n            duration,\r\n            paused,\r\n            track_window: { current_track },\r\n          } = state;\r\n\r\n          debounce(state, saveEvent);\r\n          setPlayingMusicInfo({ currentTrack: MusicMapper.toMusicTrack(current_track), duration, position, paused });\r\n        }\r\n      });\r\n    } // eslint-disable-next-line\r\n  }, [player]);\r\n\r\n  async function createSpotifyPlayerIfNeed(): Promise<void> {\r\n    const player = await SpotifyUtil.createPlayer(accessToken);\r\n\r\n    setPlayer(player);\r\n  }\r\n\r\n  async function createSpotifyPlayerIfNeedAndValidatePlayer(): Promise<void> {\r\n    await createSpotifyPlayerIfNeed();\r\n    await loadCurrentPlayerInfo();\r\n  }\r\n\r\n  async function getCurrentPlayerInfo(): Promise<SpotifyPlayerResponse | null> {\r\n    const { data } = await requestService.get<SpotifyPlayerResponse | null>(`${spotifyUserEndpoint}/player`);\r\n\r\n    return data;\r\n  }\r\n\r\n  async function loadCurrentPlayerInfo(): Promise<void> {\r\n    const currentPlayer = await getCurrentPlayerInfo();\r\n\r\n    setIsPluginPlayerActive((currentPlayer?.device != null && player?.device_id) === currentPlayer?.device?.id);\r\n  }\r\n\r\n  async function nextTrack(): Promise<void> {\r\n    if (player == null) {\r\n      throw new Error(\"You have to login first!\");\r\n    }\r\n\r\n    await player.original.nextTrack();\r\n  }\r\n\r\n  async function previousTrack(): Promise<void> {\r\n    if (player == null) {\r\n      throw new Error(\"You have to login first!\");\r\n    }\r\n\r\n    await player.original.previousTrack();\r\n  }\r\n\r\n  async function togglePlay(): Promise<void> {\r\n    if (player == null) {\r\n      throw new Error(\"You have to login first!\");\r\n    }\r\n\r\n    await player.original.togglePlay();\r\n  }\r\n\r\n  async function transferUserPlaybackToPlugin(): Promise<void> {\r\n    const endpoint = `${spotifyUserEndpoint}/player`;\r\n\r\n    await requestService.put({\r\n      url: endpoint,\r\n      data: {\r\n        device_ids: [player?.device_id],\r\n      },\r\n    });\r\n    await TimerUtil.wait(500);\r\n    await loadCurrentPlayerInfo();\r\n  }\r\n\r\n  return (\r\n    <MusicContext.Provider\r\n      value={{\r\n        isPlayerReady,\r\n        isPluginPlayerActive,\r\n        nextTrack,\r\n        playingMusicInfo,\r\n        previousTrack,\r\n        togglePlay,\r\n        transferUserPlaybackToPlugin,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport const usePlayer = () => useContext<Context>(MusicContext);\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"Audio Wave\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"wave-svg-line-1\",\n  \"data-name\": \"Line 1\",\n  d: \"M0.91,15L0.78,15A1,1,0,0,0,0,16v6a1,1,0,1,0,2,0s0,0,0,0V16a1,1,0,0,0-1-1H0.91Z\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"wave-svg-line-2\",\n  \"data-name\": \"Line 2\",\n  d: \"M6.91,9L6.78,9A1,1,0,0,0,6,10V28a1,1,0,1,0,2,0s0,0,0,0V10A1,1,0,0,0,7,9H6.91Z\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"wave-svg-line-3\",\n  \"data-name\": \"Line 3\",\n  d: \"M12.91,0L12.78,0A1,1,0,0,0,12,1V37a1,1,0,1,0,2,0s0,0,0,0V1a1,1,0,0,0-1-1H12.91Z\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"wave-svg-line-4\",\n  \"data-name\": \"Line 4\",\n  d: \"M18.91,10l-0.12,0A1,1,0,0,0,18,11V27a1,1,0,1,0,2,0s0,0,0,0V11a1,1,0,0,0-1-1H18.91Z\"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"wave-svg-line-5\",\n  \"data-name\": \"Line 5\",\n  d: \"M24.91,15l-0.12,0A1,1,0,0,0,24,16v6a1,1,0,0,0,2,0s0,0,0,0V16a1,1,0,0,0-1-1H24.91Z\"\n});\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"wave-svg-line-6\",\n  \"data-name\": \"Line 6\",\n  d: \"M30.91,10l-0.12,0A1,1,0,0,0,30,11V27a1,1,0,1,0,2,0s0,0,0,0V11a1,1,0,0,0-1-1H30.91Z\"\n});\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"wave-svg-line-7\",\n  \"data-name\": \"Line 7\",\n  d: \"M36.91,0L36.78,0A1,1,0,0,0,36,1V37a1,1,0,1,0,2,0s0,0,0,0V1a1,1,0,0,0-1-1H36.91Z\"\n});\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"wave-svg-line-8\",\n  \"data-name\": \"Line 8\",\n  d: \"M42.91,9L42.78,9A1,1,0,0,0,42,10V28a1,1,0,1,0,2,0s0,0,0,0V10a1,1,0,0,0-1-1H42.91Z\"\n});\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"wave-svg-line-9\",\n  \"data-name\": \"Line 9\",\n  d: \"M48.91,15l-0.12,0A1,1,0,0,0,48,16v6a1,1,0,1,0,2,0s0,0,0,0V16a1,1,0,0,0-1-1H48.91Z\"\n});\n\nvar SvgLoader = function SvgLoader(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"wave-svg\",\n    \"data-name\": \"Layer 1\",\n    viewBox: \"0 0 50 38.05\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLoader, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/loader.6699e396.svg\";\nexport { ForwardRef as ReactComponent };","import \"./style.scss\";\r\nimport React from \"react\";\r\n\r\nimport { ReactComponent as LoaderSvg } from \"./loader.svg\";\r\n\r\nexport function Loader(): React.ReactElement {\r\n  return (\r\n    <div className=\"loader-component\">\r\n      <LoaderSvg />\r\n    </div>\r\n  );\r\n}\r\n","class MessageService {\r\n  alert(message: string): void {\r\n    window.alert(message);\r\n  }\r\n}\r\n\r\nexport const messageService = new MessageService();\r\n","import { Artist } from \"../services/artist\";\r\nimport { SpotifyArtistsSearchItem, SpotifyTracksSearchItem } from \"../@types/spotify\";\r\nimport { MusicMapper } from \"./music\";\r\n\r\nexport class SearchMapper {\r\n  static toArtist({ uri, name, images }: SpotifyArtistsSearchItem): Artist {\r\n    return {\r\n      id: uri,\r\n      name,\r\n      image: {\r\n        alt: name,\r\n        src: images[0]?.url,\r\n      },\r\n    };\r\n  }\r\n\r\n  static toMusic(track: SpotifyTracksSearchItem): import(\"../@types/music\").Music {\r\n    return MusicMapper.toMusic(track);\r\n  }\r\n}\r\n","import React, { createContext, useContext } from \"react\";\r\n\r\nimport { Artist } from \"../services/artist\";\r\nimport { SearchMapper } from \"../mappers/search\";\r\nimport { SpotifySearchResponse } from \"../@types/spotify\";\r\nimport { SpotifyUtil } from \"../utils/spotify\";\r\nimport { useAuth } from \"./auth\";\r\nimport { Music } from \"../@types/music\";\r\n\r\ninterface Props {}\r\n\r\ninterface Context {\r\n  searchArtists: (text: string) => Promise<Artist[]>;\r\n  searchMusic: (text: string) => Promise<Music[]>;\r\n}\r\n\r\nconst SearchContext = createContext({} as any);\r\nconst spotifySearchEndpoint = `${SpotifyUtil.getApiUrl()}/search`;\r\n\r\ntype SpotifySearchType = \"album\" | \"artist\" | \"playlist\" | \"track\" | \"show\" | \"episode\";\r\n\r\nexport function SearchProvider(props: Props) {\r\n  const { requestService } = useAuth();\r\n\r\n  async function search(text: string, type: SpotifySearchType): Promise<SpotifySearchResponse> {\r\n    const { data } = await requestService.get<SpotifySearchResponse>({\r\n      url: spotifySearchEndpoint,\r\n      params: { q: text, type },\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  async function searchArtists(text: string): Promise<Artist[]> {\r\n    const { artists } = await search(text, \"artist\");\r\n\r\n    if (!artists) {\r\n      throw new Error(\"Invalid response\");\r\n    }\r\n\r\n    return artists.items.map(SearchMapper.toArtist);\r\n  }\r\n\r\n  async function searchMusic(text: string): Promise<Music[]> {\r\n    const { tracks } = await search(text, \"track\");\r\n\r\n    if (!tracks) {\r\n      throw new Error(\"Invalid response\");\r\n    }\r\n\r\n    return tracks.items.map(SearchMapper.toMusic);\r\n  }\r\n\r\n  return <SearchContext.Provider value={{ searchArtists, searchMusic }} {...props} />;\r\n}\r\n\r\nexport const useSearch = () => useContext<Context>(SearchContext);\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\n\r\nimport { cookieService } from \"../services/storage\";\r\nimport { SpotifyUtil } from \"../utils/spotify\";\r\nimport { StringUtil } from \"../utils/string\";\r\nimport { SpotifyRequestService } from \"../services/request\";\r\n\r\ninterface Props {}\r\ninterface Context {\r\n  accessToken: string;\r\n  isAuthenticated: boolean;\r\n  logout: () => void;\r\n  requestService: SpotifyRequestService;\r\n  saveToken: (redirectUrl: string) => void;\r\n}\r\n\r\nconst COOKIE_NAME = process.env.REACT_APP_COOKIE_NAME || \"SpotifyToken\";\r\nconst AuthContext = createContext({ isAuthenticated: false } as any);\r\n\r\nexport function AuthProvider(props: Props) {\r\n  const [accessToken, setAccessToken] = useState<null | string>(cookieService.get(COOKIE_NAME));\r\n  const [requestService, setRequestService] = useState(new SpotifyRequestService(accessToken));\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  function logout(): void {\r\n    setAccessToken(null);\r\n    cookieService.delete(COOKIE_NAME);\r\n  }\r\n\r\n  function saveToken(redirectUrl: string): void {\r\n    const { accessToken: newAccessToken, expiresInSeconds } = SpotifyUtil.getTokenAndInfoFromRedirectUrl(redirectUrl);\r\n\r\n    cookieService.save(COOKIE_NAME, newAccessToken, expiresInSeconds);\r\n    setAccessToken(newAccessToken);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsAuthenticated(!StringUtil.isEmpty(accessToken));\r\n    setRequestService(new SpotifyRequestService(accessToken));\r\n  }, [accessToken]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ logout, saveToken, isAuthenticated, accessToken, requestService }} {...props} />\r\n  );\r\n}\r\n\r\nexport const useAuth = () => React.useContext<Context>(AuthContext);\r\n","import React, { createContext, useContext } from \"react\";\r\nimport { requestService } from \"../services/request\";\r\nimport { StringUtil } from \"../utils/string\";\r\n\r\nexport interface Activity {\r\n  id: string;\r\n  name: string;\r\n  createdDate?: string;\r\n}\r\n\r\ninterface Props {}\r\n\r\ninterface Context {\r\n  search: (text?: string) => Promise<Activity[]>;\r\n}\r\n\r\nconst USE_API = process.env.REACT_APP_USE_API_TO_LOAD_ACTIVITY === \"true\";\r\nconst apiEndpoint = process.env.REACT_APP_API_HOST || \"https://localhost:44301/api\";\r\nconst eventApiEndpoint = `${apiEndpoint}/activities`;\r\nconst baseHost = process.env.REACT_APP_HOST_URL || \"https://ericoloewe.github.io/computer-science-tcc\";\r\n\r\nconst ActivityContext = createContext({} as any);\r\n\r\nexport function ActivityProvider(props: Props) {\r\n  async function search(text?: string): Promise<Activity[]> {\r\n    return USE_API ? searchFromApi(text) : searchFromJson(text);\r\n  }\r\n\r\n  async function searchFromJson(text?: string): Promise<Activity[]> {\r\n    const { data } = await requestService.get<string[]>(`${baseHost}/activities.json`);\r\n\r\n    return data\r\n      .filter((l) => !text || l.toLowerCase().includes(text?.toLowerCase()))\r\n      .map((l) => ({\r\n        id: StringUtil.toKebabCase(l),\r\n        name: l,\r\n      }));\r\n  }\r\n\r\n  async function searchFromApi(text?: string): Promise<Activity[]> {\r\n    const { data } = await requestService.get<Activity[]>({\r\n      url: eventApiEndpoint,\r\n      params: { text },\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  return <ActivityContext.Provider value={{ search }} {...props} />;\r\n}\r\n\r\nexport const useActivity = () => useContext<Context>(ActivityContext);\r\n","import React, { createContext, useContext } from \"react\";\r\nimport { requestService } from \"../services/request\";\r\nimport { StringUtil } from \"../utils/string\";\r\n\r\nexport interface Feeling {\r\n  id: string;\r\n  name: string;\r\n  createdDate?: string;\r\n}\r\n\r\ninterface Props {}\r\n\r\ninterface Context {\r\n  search: (text?: string) => Promise<Feeling[]>;\r\n}\r\n\r\nconst USE_API = process.env.REACT_APP_USE_API_TO_LOAD_FEELINGS === \"true\";\r\nconst apiEndpoint = process.env.REACT_APP_API_HOST || \"https://localhost:44301/api\";\r\nconst eventApiEndpoint = `${apiEndpoint}/feelings`;\r\nconst baseHost = process.env.REACT_APP_HOST_URL || \"https://ericoloewe.github.io/computer-science-tcc\";\r\n\r\nconst FeelingContext = createContext({} as any);\r\n\r\nexport function FeelingProvider(props: Props) {\r\n  async function search(text?: string): Promise<Feeling[]> {\r\n    return USE_API ? searchFromApi(text) : searchFromJson(text);\r\n  }\r\n\r\n  async function searchFromJson(text?: string): Promise<Feeling[]> {\r\n    const { data } = await requestService.get<string[]>(`${baseHost}/feelings.json`);\r\n\r\n    return data\r\n      .filter((l) => !text || l.toLowerCase().includes(text?.toLowerCase()))\r\n      .map((l) => ({\r\n        id: StringUtil.toKebabCase(l),\r\n        name: l,\r\n      }));\r\n  }\r\n\r\n  async function searchFromApi(text?: string): Promise<Feeling[]> {\r\n    const { data } = await requestService.get<Feeling[]>({\r\n      url: eventApiEndpoint,\r\n      params: { text },\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  return <FeelingContext.Provider value={{ search }} {...props} />;\r\n}\r\n\r\nexport const useFeeling = () => useContext<Context>(FeelingContext);\r\n","import React, { createContext, useContext } from \"react\";\r\nimport { requestService } from \"../services/request\";\r\nimport { StringUtil } from \"../utils/string\";\r\n\r\nexport interface Location {\r\n  id: string;\r\n  name: string;\r\n  createdDate?: string;\r\n}\r\n\r\ninterface Props {}\r\n\r\ninterface Context {\r\n  search: (text?: string) => Promise<Location[]>;\r\n}\r\n\r\nconst apiEndpoint = process.env.REACT_APP_API_HOST || \"https://localhost:44301/api\";\r\nconst eventApiEndpoint = `${apiEndpoint}/locations`;\r\nconst USE_API = process.env.REACT_APP_USE_API_TO_LOAD_LOCATION === \"true\";\r\nconst baseHost = process.env.REACT_APP_HOST_URL || \"https://ericoloewe.github.io/computer-science-tcc\";\r\n\r\nconst LocationContext = createContext({} as any);\r\n\r\nexport function LocationProvider(props: Props) {\r\n  async function search(text?: string): Promise<Location[]> {\r\n    return USE_API ? searchFromApi(text) : searchFromJson(text);\r\n  }\r\n\r\n  async function searchFromJson(text?: string): Promise<Location[]> {\r\n    const { data } = await requestService.get<string[]>(`${baseHost}/locations.json`);\r\n\r\n    return data\r\n      .filter((l) => !text || l.toLowerCase().includes(text?.toLowerCase()))\r\n      .map((l) => ({\r\n        id: StringUtil.toKebabCase(l),\r\n        name: l,\r\n      }));\r\n  }\r\n\r\n  async function searchFromApi(text?: string): Promise<Location[]> {\r\n    const { data } = await requestService.get<Location[]>({\r\n      url: eventApiEndpoint,\r\n      params: { text },\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  return <LocationContext.Provider value={{ search }} {...props} />;\r\n}\r\n\r\nexport const useLocation = () => useContext<Context>(LocationContext);\r\n","import axios, { AxiosResponse } from \"axios\";\r\nimport { StringUtil } from \"../utils/string\";\r\n\r\nexport interface GetRequest {\r\n  url: string;\r\n  headers?: object;\r\n  params?: object;\r\n}\r\n\r\nexport interface PostRequest {\r\n  url: string;\r\n  headers?: object;\r\n  data?: object;\r\n}\r\n\r\nexport interface Response<T> {\r\n  headers?: object;\r\n  data: T;\r\n  status: number;\r\n}\r\n\r\ntype Request = GetRequest | PostRequest;\r\n\r\nclass RequestService {\r\n  async get<T>(getRequest: string | GetRequest): Promise<Response<T>> {\r\n    let request: GetRequest = this.parseRequest(getRequest);\r\n    const response = await axios(request);\r\n\r\n    return this.mapAxiosToResponse(response);\r\n  }\r\n\r\n  async post<T>(postRequest: string | PostRequest): Promise<Response<T>> {\r\n    let request: PostRequest = this.parseRequest(postRequest);\r\n    const response = await axios({ ...request, method: \"post\" });\r\n\r\n    return this.mapAxiosToResponse(response);\r\n  }\r\n\r\n  async put<T>(putRequest: string | PostRequest): Promise<Response<T>> {\r\n    let request: PostRequest = this.parseRequest(putRequest);\r\n    const response = await axios({ ...request, method: \"put\" });\r\n\r\n    return this.mapAxiosToResponse(response);\r\n  }\r\n\r\n  protected parseRequest(getRequest: string | Request): Request {\r\n    let request: Request = getRequest as Request;\r\n\r\n    if (StringUtil.isString(getRequest)) {\r\n      request = { url: getRequest as string };\r\n    }\r\n\r\n    return request;\r\n  }\r\n\r\n  private mapAxiosToResponse<T>(response: AxiosResponse): Response<T> {\r\n    const { data, headers, status } = response;\r\n\r\n    return {\r\n      data,\r\n      headers,\r\n      status,\r\n    };\r\n  }\r\n}\r\n\r\nexport class SpotifyRequestService extends RequestService {\r\n  accessToken: string | null;\r\n\r\n  constructor(accessToken: string | null) {\r\n    super();\r\n    this.accessToken = accessToken;\r\n  }\r\n\r\n  protected parseRequest(getRequest: string | Request): Request {\r\n    const request = super.parseRequest(getRequest);\r\n\r\n    if (this.accessToken == null) {\r\n      throw new Error(\"No access token, you must login!\");\r\n    }\r\n\r\n    request.headers = {\r\n      Authorization: `Bearer ${this.accessToken}`,\r\n    };\r\n\r\n    return request;\r\n  }\r\n}\r\n\r\nexport const requestService = new RequestService();\r\n","export class StringUtil {\r\n  static isEmpty<T>(any: T): boolean {\r\n    return any == null || (typeof any === \"string\" && any.trim().length === 0);\r\n  }\r\n\r\n  static isString<T>(any: T): boolean {\r\n    return typeof any === \"string\";\r\n  }\r\n\r\n  static sliceIfNeed(str: string, size: number = 50): string {\r\n    return str.length > size ? `${str.slice(0, size)}...` : str;\r\n  }\r\n\r\n  static toKebabCase(str: string): string {\r\n    return str\r\n      .normalize('NFD')\r\n      .replace(/[\\u0300-\\u036f]/g, '')\r\n      .replace(/[^-\\w ]/g, '')\r\n      .replace(/-+/g, ' ')\r\n      .trim()\r\n      .replace(/ +/g, '-')\r\n      .toLowerCase()\r\n  }\r\n\r\n  static toString(str: any): string {\r\n    if (!str) {\r\n      throw new Error(\"Invalid str\");\r\n    }\r\n\r\n    return str.toString();\r\n  }\r\n\r\n  static toStringOrDefault(str: any, def: string): string {\r\n    return !str ? def : str.toString();\r\n  }\r\n}\r\n"],"sourceRoot":""}