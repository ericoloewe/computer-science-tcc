{"version":3,"sources":["pages/shared/layout/custom-drawer.tsx","pages/shared/layout/custom-menu.tsx","pages/shared/layout/index.tsx","components/choose/index.tsx","pages/music-search/index.tsx"],"names":["CustomDrawer","isOpen","onClose","useUser","profile","avatarSrc","email","name","link","Drawer","anchor","open","List","component","aria-label","ListItem","button","props","href","target","ListItemAvatar","Avatar","src","alt","ListItemText","primary","secondary","Divider","Link","to","ListItemIcon","Home","Face","LibraryMusic","ExitToApp","CustomMenu","menuItems","useState","anchorEl","setAnchorEl","IconButton","edge","color","onClick","e","currentTarget","MoreVert","id","keepMounted","Boolean","React","Children","map","mi","cloneElement","Layout","className","children","hideDrawerButton","pageTitle","isDrawerOpen","setDrawerOpen","AppBar","position","Toolbar","Menu","Typography","variant","style","flexGrow","Choose","items","searchLabel","onChoose","onChangeSearch","searchValue","label","onChange","value","dense","ci","key","selected","image","title","description","paragraph","debounce","TimerUtil","searchText","searchMusicsOfTexts","history","useHistory","searchMusic","useSearch","saveEvent","useEvents","save","setSearchText","selectedMusicsMap","setSelectedMusics","musics","setMusics","a","musicsToSave","Object","keys","k","length","EventType","LIKED_MUSIC","join","push","markSelectedMusics","musicsMappedWithSelected","m","text","parsedMusics","uri","useEffect","StringUtil","isEmpty","s","music"],"mappings":"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","file":"static/js/12.cc44783d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText, Divider, ListItemAvatar, Avatar } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  ExitToApp as ExitToAppIcon,\r\n  LibraryMusic as LibraryMusicIcon,\r\n  Face as FaceIcon,\r\n} from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useUser } from \"../../../contexts/user\";\r\n\r\nexport interface DrawerProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nexport function CustomDrawer({ isOpen, onClose }: DrawerProps) {\r\n  const {\r\n    profile: { avatarSrc, email, name, link },\r\n  } = useUser();\r\n  // eslint-disable-next-line\r\n  const customLink = (props: any) => <a {...props} />;\r\n\r\n  return (\r\n    <Drawer anchor=\"left\" open={isOpen} onClose={onClose}>\r\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n        <ListItem button {...{ component: customLink, href: link, target: \"_blank\" }}>\r\n          <ListItemAvatar>\r\n            <Avatar src={avatarSrc} alt=\"User avatar\" />\r\n          </ListItemAvatar>\r\n          <ListItemText primary={name} secondary={email} />\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem button {...{ component: Link, to: `/` }}>\r\n          <ListItemIcon>\r\n            <HomeIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Home\" />\r\n        </ListItem>\r\n        <ListItem button {...{ component: Link, to: `/new-context/artists` }}>\r\n          <ListItemIcon>\r\n            <FaceIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Artistas preferidos\" />\r\n        </ListItem>\r\n        <ListItem button {...{ component: Link, to: `/new-context/gender` }}>\r\n          <ListItemIcon>\r\n            <LibraryMusicIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Generos preferidos\" />\r\n        </ListItem>\r\n        <ListItem button {...{ component: Link, to: `/logout` }}>\r\n          <ListItemIcon>\r\n            <ExitToAppIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Sair\" />\r\n        </ListItem>\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { IconButton, Menu } from \"@material-ui/core\";\r\nimport { MoreVert as MoreVertIcon } from \"@material-ui/icons\";\r\n\r\nexport function CustomMenu({ menuItems }: { menuItems: JSX.Element[] }): React.ReactElement {\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n\r\n  return (\r\n    <>\r\n      <IconButton edge=\"end\" color=\"inherit\" aria-label=\"more\" onClick={(e) => setAnchorEl(e.currentTarget)}>\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={() => setAnchorEl(null)}>\r\n        {React.Children.map(menuItems, (mi) => {\r\n          return React.cloneElement(mi, {\r\n            ...mi.props,\r\n            onClick: (e: any) => {\r\n              const { onClick } = mi.props;\r\n              setAnchorEl(null);\r\n              onClick && onClick(e);\r\n            },\r\n          });\r\n        })}\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./style.scss\";\n\nimport { AppBar, Toolbar, IconButton, Typography } from \"@material-ui/core\";\nimport { Menu as MenuIcon } from \"@material-ui/icons\";\n\nimport { CustomDrawer } from \"./custom-drawer\";\nimport { CustomMenu } from \"./custom-menu\";\n\ninterface Props {\n  children: React.ReactElement | React.ReactElement[];\n  className?: string;\n  hideDrawerButton?: boolean;\n  menuItems?: JSX.Element[];\n  pageTitle: string;\n}\n\nexport function Layout({ className, children, hideDrawerButton, menuItems, pageTitle }: Props) {\n  const [isDrawerOpen, setDrawerOpen] = useState(false);\n\n  return (\n    <div className=\"root-layout\">\n      <header className=\"header\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            {!hideDrawerButton && (\n              <IconButton\n                edge=\"start\"\n                className={\"classes.menuButton\"}\n                color=\"inherit\"\n                aria-label=\"menu\"\n                onClick={() => setDrawerOpen(true)}\n              >\n                <MenuIcon />\n              </IconButton>\n            )}\n            <Typography variant=\"h6\" className={\"title\"}>\n              {pageTitle}\n            </Typography>\n            <div style={{ flexGrow: 1 }} />\n            {!!menuItems && <CustomMenu menuItems={menuItems} />}\n          </Toolbar>\n        </AppBar>\n      </header>\n      <article className={className}>{children}</article>\n      <CustomDrawer isOpen={isDrawerOpen} onClose={() => setDrawerOpen(false)} />\n    </div>\n  );\n}\n\n","import \"./style.scss\";\r\nimport React from \"react\";\r\nimport { TextField, ListItem, ListItemAvatar, Avatar, ListItemText, List, Paper, Typography } from \"@material-ui/core\";\r\n\r\ninterface Props {\r\n  items: ChooseItem[];\r\n  onChoose?: (item: ChooseItem) => void;\r\n  searchLabel?: string;\r\n  searchValue?: string;\r\n  onChangeSearch?: (s: string) => void;\r\n}\r\n\r\nexport interface ChooseItem {\r\n  id: string;\r\n  title: string;\r\n  description?: string;\r\n  image?: { src: string; alt: string };\r\n  selected?: boolean;\r\n}\r\n\r\nexport function Choose({ items, searchLabel, onChoose, onChangeSearch, searchValue }: Props) {\r\n  return (\r\n    <div className=\"choose-component\">\r\n      {!!searchLabel && (\r\n        <TextField\r\n          label={searchLabel}\r\n          onChange={(e) => onChangeSearch && onChangeSearch(e.target.value)}\r\n          value={searchValue}\r\n        />\r\n      )}\r\n\r\n      {!searchLabel || !!searchValue ? (\r\n        <Paper className=\"paper\">\r\n          <List className=\"list\" dense={false}>\r\n            {items.map((ci) => (\r\n              <ListItem key={ci.id} selected={ci.selected} onClick={() => onChoose && onChoose(ci)} button={true}>\r\n                {ci.image && (\r\n                  <ListItemAvatar>\r\n                    <Avatar src={ci.image?.src} alt={ci.image.alt} />\r\n                  </ListItemAvatar>\r\n                )}\r\n                <ListItemText primary={ci.title} secondary={ci.description} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Paper>\r\n      ) : (\r\n        <Typography paragraph>Digite um termo a ser procurado</Typography>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import \"./style.scss\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { ChooseItem } from \"../../components/choose-with-actions\";\r\nimport { StringUtil } from \"../../utils/string\";\r\nimport { TimerUtil } from \"../../utils/timer\";\r\nimport { useSearch } from \"../../contexts/search\";\r\nimport { useEvents, EventType } from \"../../contexts/event\";\r\nimport { Choose } from \"../../components/choose\";\r\nimport { Layout } from \"../shared/layout\";\r\n\r\nconst debounce = TimerUtil.debounce(\r\n  (searchText: string, searchMusicsOfTexts: Function) => searchMusicsOfTexts(searchText),\r\n  1200\r\n);\r\n\r\nexport default function () {\r\n  const history = useHistory();\r\n  let { searchMusic } = useSearch();\r\n  const { save: saveEvent } = useEvents();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [selectedMusicsMap, setSelectedMusics] = useState({} as { [key: string]: string });\r\n  const [musics, setMusics] = useState([] as ChooseItem[]);\r\n\r\n  async function saveAndGoHome() {\r\n    const musicsToSave = Object.keys(selectedMusicsMap).map((k) => selectedMusicsMap[k]);\r\n\r\n    if (musicsToSave.length > 0) {\r\n      await saveEvent(EventType.LIKED_MUSIC, musicsToSave.join(\";\"));\r\n    }\r\n\r\n    history.push(\"/\");\r\n  }\r\n\r\n  function chooseMusic(music: ChooseItem) {\r\n    if (selectedMusicsMap[music.id] != null) {\r\n      delete selectedMusicsMap[music.id];\r\n    } else {\r\n      selectedMusicsMap[music.id] = music.id;\r\n    }\r\n\r\n    setSelectedMusics({ ...selectedMusicsMap });\r\n  }\r\n\r\n  function markSelectedMusics(musics: ChooseItem[]) {\r\n    const musicsMappedWithSelected = musics.map((m) => ({ ...m, selected: selectedMusicsMap[m.id] != null }));\r\n\r\n    setMusics(musicsMappedWithSelected);\r\n  }\r\n\r\n  async function searchMusicsOfTexts(text: string) {\r\n    const musics = await searchMusic(text);\r\n    const parsedMusics = musics.map((m) => ({ ...m, title: m.name, id: m.uri }));\r\n\r\n    setMusics([...parsedMusics]);\r\n    markSelectedMusics(parsedMusics);\r\n  }\r\n\r\n  useEffect(() => {\r\n    markSelectedMusics(musics); // eslint-disable-next-line\r\n  }, [selectedMusicsMap]);\r\n\r\n  useEffect(() => {\r\n    if (!StringUtil.isEmpty(searchText)) {\r\n      debounce(searchText, searchMusicsOfTexts);\r\n    } // eslint-disable-next-line\r\n  }, [searchText]);\r\n\r\n  return (\r\n    <Layout className=\"music-search-page\" pageTitle=\"Qual musica se encaixa mais nesse momento?\" hideDrawerButton={true}>\r\n      <Choose\r\n        items={musics}\r\n        onChangeSearch={(s) => setSearchText(s)}\r\n        onChoose={chooseMusic}\r\n        searchLabel=\"Nome da musica\"\r\n        searchValue={searchText}\r\n      />\r\n      <Button variant=\"contained\" color=\"primary\" onClick={saveAndGoHome}>\r\n        Proximo\r\n      </Button>\r\n    </Layout>\r\n  );\r\n}\r\n"],"sourceRoot":""}