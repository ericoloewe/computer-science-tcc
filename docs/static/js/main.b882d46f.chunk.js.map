{"version":3,"sources":["utils/spotify.ts","serviceWorker.ts","components/router/index.tsx","mappers/playlist.ts","contexts/playlist.tsx","contexts/index.tsx","index.tsx","contexts/event.tsx","services/gtm.ts","services/storage.ts","contexts/user.tsx","mappers/image.ts","mappers/music.ts","utils/timer.ts","utils/player.ts","contexts/player.tsx","components/loader/loader.svg","components/loader/index.tsx","mappers/search.ts","contexts/search.tsx","contexts/auth.tsx","contexts/activity.tsx","contexts/feeling.tsx","contexts/location.tsx","services/request.ts","utils/string.ts"],"names":["SpotifyUtil","url","URL","process","searchParams","set","getSpotifyRedirectUrl","this","SCOPES","join","toString","accessToken","Promise","resolve","reject","window","onSpotifyWebPlaybackSDKReady","player","Spotify","Player","name","getOAuthToken","cb","addListener","message","device_id","original","connect","redirectUrl","search","hash","slice","length","get","expiresInSeconds","Number","tokenType","Error","Boolean","location","hostname","match","ContextIntro","children","rest","isAuthenticated","useAuth","render","cookieService","CONTEXT_COOKIE_NAME","to","pathname","state","from","PrivateRoute","NonAuthRoute","PlaylistMapper","id","description","images","tracks","title","StringUtil","sliceIfNeed","image","alt","src","musics","items","map","t","MusicMapper","toMusic","track","PlaylistContext","createContext","spotifyPlaylistsEndpoint","getApiUrl","spotifyLoadPlaylistEndpoint","PlaylistProvider","props","useUser","profile","requestService","playlistId","musicsIds","a","post","data","uris","toBasicPlaylist","toPlaylist","newName","put","Provider","value","addMusics","create","load","loadAll","rename","AppProviders","Home","React","lazy","Welcome","Login","LoginRedirectSpotify","Logout","Artists","Gender","Feeling","Activity","Location","MusicSearch","theme","createMuiTheme","palette","primary","main","secondary","indigo","ReactDOM","fallback","ThemeProvider","path","exact","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","EventType","gtmService","eventName","customProps","tagsWereNotFired","dataLayer","push","event","log","ex","apiEndpoint","REACT_APP_API_HOST","eventApiEndpoint","UserContext","eventsHistory","EventsProvider","spotifyUserUri","uri","type","hasToSaveTheEvent","sendEvent","lastEvent","PAUSE_MUSIC","PLAY_MUSIC","save","useEvents","useContext","key","cookie","includes","start","indexOf","substring","split","decodeURIComponent","expires","date","Date","setTime","getTime","toUTCString","spotifyUserEndpoint","UserProvider","useState","setProfile","email","display_name","link","external_urls","spotify","avatarSrc","tryToSaveAtApi","spotifyUri","endpoint","devices","basicUser","useEffect","getAvailableDevices","ImageMapper","album","toCustom","TimerUtil","callback","wait","timeout","params","clearTimeout","setTimeout","time","musicHistory","PlayerUtil","current_track","track_window","lastMusic","paused","CHANGE_MUSIC","position","RESTART_MUSIC","MusicContext","debounce","saveEvent","stateToEvent","PlayerProvider","setPlayer","isPluginPlayerActive","setIsPluginPlayerActive","isPlayerReady","setIsPlayerReady","playingMusicInfo","setPlayingMusicInfo","createSpotifyPlayerIfNeed","createPlayer","loadCurrentPlayerInfo","getCurrentPlayerInfo","currentPlayer","device","nextTrack","previousTrack","togglePlay","device_ids","createSpotifyPlayerIfNeedAndValidatePlayer","duration","currentTrack","toMusicTrack","transferUserPlaybackToPlugin","usePlayer","_extends","Object","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","_ref3","className","d","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_ref","svgRef","viewBox","ref","undefined","ForwardRef","forwardRef","Loader","SearchMapper","SearchContext","spotifySearchEndpoint","SearchProvider","text","q","artists","toArtist","searchArtists","searchMusic","useSearch","AuthContext","AuthProvider","setAccessToken","SpotifyRequestService","setRequestService","setIsAuthenticated","isEmpty","logout","delete","saveToken","getTokenAndInfoFromRedirectUrl","newAccessToken","USE_API","REACT_APP_USE_API_TO_LOAD_ACTIVITY","baseHost","ActivityContext","ActivityProvider","searchFromApi","searchFromJson","filter","l","toLowerCase","toKebabCase","useActivity","REACT_APP_USE_API_TO_LOAD_FEELINGS","FeelingContext","FeelingProvider","useFeeling","REACT_APP_USE_API_TO_LOAD_LOCATION","LocationContext","LocationProvider","useLocation","RequestService","getRequest","request","parseRequest","axios","response","mapAxiosToResponse","postRequest","method","putRequest","isString","headers","status","Authorization","any","trim","str","size","normalize","replace","def"],"mappings":"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","file":"static/js/main.b882d46f.chunk.js","sourcesContent":["\r\nexport interface SpotifyToken {\r\n  accessToken: string;\r\n  expiresInSeconds: number;\r\n  tokenType: string;\r\n}\r\n\r\nexport interface SpotifyPlayer {\r\n  device_id: string;\r\n  original: Spotify.SpotifyPlayer;\r\n}\r\n\r\nexport class SpotifyUtil {\r\n  static SCOPES = [\r\n    \"playlist-modify-private\",\r\n    \"playlist-modify-public\",\r\n    \"playlist-read-private\",\r\n    \"streaming\",\r\n    \"user-library-read\",\r\n    \"user-read-email\",\r\n    \"user-read-playback-state\",\r\n    \"user-read-private\",\r\n    \"user-read-recently-played\",\r\n    \"user-top-read\",\r\n  ];\r\n\r\n  static createSpotifyAuthUrl(): string {\r\n    if (!process.env.REACT_APP_SPOTIFY_AUTH_URL) {\r\n      throw new Error(\"you need to set spotify url\");\r\n    }\r\n\r\n    if (!process.env.REACT_APP_SPOTIFY_CLIENT_ID) {\r\n      throw new Error(\"you need to set spotify client id\");\r\n    }\r\n\r\n    var url = new URL(process.env.REACT_APP_SPOTIFY_AUTH_URL);\r\n\r\n    url.searchParams.set(\"client_id\", process.env.REACT_APP_SPOTIFY_CLIENT_ID);\r\n    url.searchParams.set(\"response_type\", \"token\");\r\n    url.searchParams.set(\"redirect_uri\", SpotifyUtil.getSpotifyRedirectUrl());\r\n    url.searchParams.set(\"scope\", this.SCOPES.join(\" \"));\r\n\r\n    return url.toString();\r\n  }\r\n\r\n  static createPlayer(accessToken: string): Promise<SpotifyPlayer> {\r\n    return new Promise((resolve, reject) => {\r\n      window.onSpotifyWebPlaybackSDKReady = () => {\r\n        const player = new Spotify.Player({\r\n          name: 'Spotify plugin',\r\n          getOAuthToken: cb => { cb(accessToken); }\r\n        });\r\n\r\n        // Error handling\r\n        player.addListener('initialization_error', ({ message }) => reject(message));\r\n        player.addListener('authentication_error', ({ message }) => reject(message));\r\n        player.addListener('account_error', ({ message }) => reject(message));\r\n        player.addListener('playback_error', ({ message }) => reject(message));\r\n        player.addListener('not_ready', ({ device_id }) => reject(`Device ID has gone offline ${device_id}`))\r\n\r\n        // Ready\r\n        player.addListener('ready', ({ device_id }) => resolve({ device_id, original: player }));\r\n\r\n        // Connect to the player!\r\n        player.connect();\r\n      };\r\n    })\r\n  }\r\n\r\n  static getApiUrl(): string {\r\n    return process.env.REACT_APP_SPOTIFY_API_URL || \"https://api.spotify.com/v1\";\r\n  }\r\n\r\n  static getTokenAndInfoFromRedirectUrl(redirectUrl: string): SpotifyToken {\r\n    var url = new URL(redirectUrl);\r\n\r\n    url.search = url.hash.slice(2, url.hash.length);\r\n\r\n    const accessToken = url.searchParams.get(\"access_token\");\r\n    const expiresInSeconds = Number(url.searchParams.get(\"expires_in\"));\r\n    const tokenType = url.searchParams.get(\"token_type\");\r\n\r\n    if (!accessToken || !expiresInSeconds || !tokenType) {\r\n      throw new Error(\"Invalid redirect parameter\");\r\n    }\r\n\r\n    return {\r\n      accessToken,\r\n      expiresInSeconds,\r\n      tokenType,\r\n    };\r\n  }\r\n\r\n  private static getSpotifyRedirectUrl(): string {\r\n    if (!process.env.REACT_APP_HOST_URL) {\r\n      throw new Error(\"you need to set spotify client id\");\r\n    }\r\n\r\n    var url = new URL(process.env.REACT_APP_HOST_URL);\r\n\r\n    url.hash = \"/login-redirect-spotify\";\r\n\r\n    return url.toString();\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport { useAuth } from \"../../contexts/auth\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { cookieService } from \"../../services/storage\";\r\n\r\nexport function ContextIntro({ children, ...rest }: any) {\r\n  const { isAuthenticated } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        !isAuthenticated || cookieService.get(cookieService.CONTEXT_COOKIE_NAME) === \"true\" ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/new-context\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport function PrivateRoute({ children, ...rest }: any) {\r\n  const { isAuthenticated } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/welcome\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport function NonAuthRoute({ children, ...rest }: any) {\r\n  const { isAuthenticated } = useAuth();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        !isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: \"/\",\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n","import { BasicPlaylist, Playlist } from \"../@types/playlist\";\r\nimport { PlaylistItem } from \"../@types/spotify\";\r\nimport { StringUtil } from \"../utils/string\";\r\nimport { MusicMapper } from \"./music\";\r\n\r\nexport class PlaylistMapper {\r\n  static toPlaylist({\r\n    id,\r\n    name,\r\n    description,\r\n    images,\r\n    tracks,\r\n  }: import(\"../@types/spotify\").SpotifyLoadPlaylistResponse): Playlist {\r\n    return {\r\n      id,\r\n      title: name,\r\n      description: StringUtil.sliceIfNeed(description),\r\n      image: {\r\n        alt: name,\r\n        src: images[0]?.url,\r\n      },\r\n      musics: tracks.items.map((t) => MusicMapper.toMusic(t.track)),\r\n    };\r\n  }\r\n\r\n  static toBasicPlaylist({ id, name, images, description }: PlaylistItem): BasicPlaylist {\r\n    return {\r\n      id,\r\n      title: name,\r\n      description: StringUtil.sliceIfNeed(description),\r\n      image: {\r\n        alt: name,\r\n        src: images[0]?.url,\r\n      },\r\n    };\r\n  }\r\n}\r\n","import React, { createContext, useContext } from \"react\";\r\nimport { useAuth } from \"./auth\";\r\n\r\nimport { SpotifyUtil } from \"../utils/spotify\";\r\nimport { PlaylistMapper } from \"../mappers/playlist\";\r\nimport { BasicPlaylist, Playlist } from \"../@types/playlist\";\r\nimport { SpotifyLoadPlaylistResponse, SpotifyLoadUserPlaylistsResponse } from \"../@types/spotify\";\r\nimport { useUser } from \"./user\";\r\n\r\ninterface Props {}\r\n\r\ninterface Context {\r\n  addMusics: (playlistId: string, musicsIds: string[]) => Promise<void>;\r\n  create: () => Promise<string>;\r\n  loadAll: () => Promise<BasicPlaylist[]>;\r\n  load: (id: string) => Promise<Playlist>;\r\n  rename: (playlistId: string, newName: string) => Promise<void>;\r\n}\r\n\r\nconst PlaylistContext = createContext({} as any);\r\nconst spotifyPlaylistsEndpoint = `${SpotifyUtil.getApiUrl()}/me/playlists`;\r\nconst spotifyLoadPlaylistEndpoint = `${SpotifyUtil.getApiUrl()}/playlists`;\r\n\r\nexport function PlaylistProvider(props: Props) {\r\n  const {\r\n    profile: { id },\r\n  } = useUser();\r\n  const { requestService } = useAuth();\r\n\r\n  async function addMusics(playlistId: string, musicsIds: string[]): Promise<void> {\r\n    await requestService.post({\r\n      url: `${spotifyLoadPlaylistEndpoint}/${playlistId}/tracks`,\r\n      data: {\r\n        uris: musicsIds,\r\n      },\r\n    });\r\n  }\r\n\r\n  async function create(): Promise<string> {\r\n    const { data } = await requestService.post<SpotifyLoadPlaylistResponse>({\r\n      url: `${SpotifyUtil.getApiUrl()}/users/${id}/playlists`,\r\n      data: {\r\n        name: \"Nova playlist\",\r\n      },\r\n    });\r\n\r\n    return data.id;\r\n  }\r\n\r\n  async function loadAll(): Promise<BasicPlaylist[]> {\r\n    const { data } = await requestService.get<SpotifyLoadUserPlaylistsResponse>({\r\n      url: spotifyPlaylistsEndpoint,\r\n    });\r\n\r\n    return data.items.map(PlaylistMapper.toBasicPlaylist);\r\n  }\r\n\r\n  async function load(id: string): Promise<Playlist> {\r\n    const { data } = await requestService.get<SpotifyLoadPlaylistResponse>({\r\n      url: `${spotifyLoadPlaylistEndpoint}/${id}`,\r\n    });\r\n\r\n    return PlaylistMapper.toPlaylist(data);\r\n  }\r\n\r\n  async function rename(playlistId: string, newName: string): Promise<void> {\r\n    await requestService.put({\r\n      url: `${spotifyLoadPlaylistEndpoint}/${playlistId}`,\r\n      data: {\r\n        name: newName,\r\n      },\r\n    });\r\n  }\r\n\r\n  return <PlaylistContext.Provider value={{ addMusics, create, load, loadAll, rename }} {...props} />;\r\n}\r\n\r\nexport const usePlaylist = () => useContext<Context>(PlaylistContext);\r\n","import React from \"react\";\r\n\r\nimport { ActivityProvider } from \"./activity\";\r\nimport { AuthProvider } from \"./auth\";\r\nimport { EventsProvider } from \"./event\";\r\nimport { FeelingProvider } from \"./feeling\";\r\nimport { LocationProvider } from \"./location\";\r\nimport { PlayerProvider } from \"./player\";\r\nimport { PlaylistProvider } from \"./playlist\";\r\nimport { SearchProvider } from \"./search\";\r\nimport { UserProvider } from \"./user\";\r\n\r\ninterface Props {\r\n  children: JSX.Element;\r\n}\r\n\r\nexport function AppProviders({ children }: Props) {\r\n  return (\r\n    <AuthProvider>\r\n      <UserProvider>\r\n        <EventsProvider>\r\n          <PlaylistProvider>\r\n            <PlayerProvider>\r\n              <FeelingProvider>\r\n                <ActivityProvider>\r\n                  <LocationProvider>\r\n                    <SearchProvider>{children}</SearchProvider>\r\n                  </LocationProvider>\r\n                </ActivityProvider>\r\n              </FeelingProvider>\r\n            </PlayerProvider>\r\n          </PlaylistProvider>\r\n        </EventsProvider>\r\n      </UserProvider>\r\n    </AuthProvider>\r\n  );\r\n}\r\n","import React, { Suspense, StrictMode } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { HashRouter, Switch } from \"react-router-dom\";\r\nimport { Loader } from \"./components/loader\";\r\nimport { PrivateRoute, NonAuthRoute, ContextIntro } from \"./components/router\";\r\nimport { AppProviders } from \"./contexts\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { indigo } from \"@material-ui/core/colors\";\r\n\r\nconst Home = React.lazy(() => import(\"./pages/home\"));\r\nconst Welcome = React.lazy(() => import(\"./pages/welcome\"));\r\nconst Login = React.lazy(() => import(\"./pages/login\"));\r\nconst LoginRedirectSpotify = React.lazy(() => import(\"./pages/login-redirect-spotify\"));\r\nconst Logout = React.lazy(() => import(\"./pages/logout\"));\r\nconst Artists = React.lazy(() => import(\"./pages/artists\"));\r\nconst Gender = React.lazy(() => import(\"./pages/genre\"));\r\nconst Feeling = React.lazy(() => import(\"./pages/feeling\"));\r\nconst Activity = React.lazy(() => import(\"./pages/activity\"));\r\nconst Location = React.lazy(() => import(\"./pages/location\"));\r\nconst MusicSearch = React.lazy(() => import(\"./pages/music-search\"));\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#282828\",\r\n    },\r\n    secondary: indigo,\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <Suspense fallback={<Loader />}>\r\n      <AppProviders>\r\n        <ThemeProvider theme={theme}>\r\n          <HashRouter>\r\n            <Switch>\r\n              <NonAuthRoute path=\"/login\">\r\n                <Login />\r\n              </NonAuthRoute>\r\n              <NonAuthRoute path=\"/login-redirect-spotify\">\r\n                <LoginRedirectSpotify />\r\n              </NonAuthRoute>\r\n              <NonAuthRoute exact path=\"/:access_token(access_token=.*)\">\r\n                <LoginRedirectSpotify />\r\n              </NonAuthRoute>\r\n              <NonAuthRoute path=\"/welcome\">\r\n                <Welcome />\r\n              </NonAuthRoute>\r\n              <PrivateRoute path=\"/new-context\" exact>\r\n                <Feeling />\r\n              </PrivateRoute>\r\n              <PrivateRoute path=\"/new-context/activity\">\r\n                <Activity />\r\n              </PrivateRoute>\r\n              <PrivateRoute path=\"/new-context/location\">\r\n                <Location />\r\n              </PrivateRoute>\r\n              <ContextIntro>\r\n                <PrivateRoute path=\"/music-search\">\r\n                  <MusicSearch />\r\n                </PrivateRoute>\r\n                <PrivateRoute path=\"/gender\">\r\n                  <Gender />\r\n                </PrivateRoute>\r\n                <PrivateRoute path=\"/artists\">\r\n                  <Artists />\r\n                </PrivateRoute>\r\n                <PrivateRoute path=\"/logout\">\r\n                  <Logout />\r\n                </PrivateRoute>\r\n                <PrivateRoute path=\"/\" exact>\r\n                  <Home />\r\n                </PrivateRoute>\r\n              </ContextIntro>\r\n            </Switch>\r\n          </HashRouter>\r\n        </ThemeProvider>\r\n      </AppProviders>\r\n    </Suspense>\r\n  </StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React, { createContext, useContext } from \"react\";\r\nimport { requestService } from \"../services/request\";\r\nimport { useUser } from \"./user\";\r\nimport { gtmService } from \"../services/gtm\";\r\n\r\ninterface Props {}\r\n\r\nexport enum EventType {\r\n  CHANGE_MUSIC = \"CHANGE_MUSIC\",\r\n  CHANGE_MUSIC_TIME = \"CHANGE_MUSIC_TIME\",\r\n  CHOOSE_ACTIVITY = \"CHOOSE_ACTIVITY\",\r\n  CHOOSE_FEELING = \"CHOOSE_FEELING\",\r\n  CHOOSE_LOCATION = \"CHOOSE_LOCATION\",\r\n  HATED_MUSIC = \"HATED_MUSIC\",\r\n  HIDE_DETAILS = \"HIDE_DETAILS\",\r\n  LIKED_ARTIST = \"LIKED_ARTIST\",\r\n  LIKED_GENRE = \"LIKED_GENRE\",\r\n  LIKED_MUSIC = \"LIKED_MUSIC\",\r\n  LOAD_LOCATION = \"LOAD_LOCATION\",\r\n  PAUSE_MUSIC = \"PAUSE_MUSIC\",\r\n  PLAY_MUSIC = \"PLAY_MUSIC\",\r\n  RESTART_MUSIC = \"RESTART_MUSIC\",\r\n  SHOW_DETAILS = \"SHOW_DETAILS\",\r\n}\r\n\r\ninterface Context {\r\n  save: (type: EventType, value?: string) => Promise<void>;\r\n}\r\n\r\nconst apiEndpoint = process.env.REACT_APP_API_HOST || \"https://localhost:44301/api\";\r\nconst eventApiEndpoint = `${apiEndpoint}/UserEvents`;\r\n\r\nconst UserContext = createContext({} as any);\r\nconst useGTM = process.env.REACT_APP_USE_GTM !== \"false\";\r\nconst eventsHistory: EventType[] = [];\r\n\r\nexport function EventsProvider(props: Props) {\r\n  const { profile } = useUser();\r\n  const spotifyUserUri = profile.uri;\r\n\r\n  async function save(type: EventType, value?: string): Promise<void> {\r\n    const data = { type, value, spotifyUserUri };\r\n\r\n    if (hasToSaveTheEvent(type)) {\r\n      if (useGTM) {\r\n        gtmService.sendEvent(\"USER_ACTION\", data);\r\n      } else {\r\n        await requestService.post({ url: eventApiEndpoint, data });\r\n      }\r\n    }\r\n  }\r\n\r\n  function hasToSaveTheEvent(type: EventType) {\r\n    const lastEvent = eventsHistory[eventsHistory.length - 1];\r\n\r\n    eventsHistory.push(type);\r\n\r\n    return !(type === lastEvent && (type === EventType.PAUSE_MUSIC || type === EventType.PLAY_MUSIC));\r\n  }\r\n\r\n  return <UserContext.Provider value={{ save }} {...props} />;\r\n}\r\n\r\nexport const useEvents = () => useContext<Context>(UserContext);\r\n","interface DataLayer {\r\n  event?: string\r\n}\r\n\r\ndeclare const dataLayer: DataLayer[]\r\n\r\nclass GtmService {\r\n  sendEvent(eventName: string, customProps: object = {}): boolean {\r\n    let tagsWereNotFired = false\r\n\r\n    try {\r\n      tagsWereNotFired = !!dataLayer.push({\r\n        event: eventName,\r\n        ...customProps,\r\n      })\r\n\r\n      if (tagsWereNotFired) {\r\n        console.log('There is no gtm tags for the event: ', eventName)\r\n      }\r\n    } catch (ex) {\r\n      console.log('There was a problem to send the gtm event ', ex)\r\n    }\r\n\r\n    return tagsWereNotFired\r\n  }\r\n}\r\n\r\nexport const gtmService = new GtmService()","class CookieService {\r\n  public readonly CONTEXT_COOKIE_NAME = \"FilledTheContext\";\r\n\r\n  delete(key: string): void {\r\n    document.cookie = key + \"=; expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\r\n  }\r\n\r\n  get(key: string): string {\r\n    const { cookie } = document;\r\n\r\n    let value = \"\";\r\n\r\n    if (cookie.includes(key)) {\r\n      const start = cookie.indexOf(key);\r\n\r\n      value = cookie.substring(start).split(\";\", 1)[0].split(\"=\")[1];\r\n    }\r\n\r\n    return decodeURIComponent(value);\r\n  }\r\n\r\n  save(key: string, value: string, expiresInSeconds?: number): void {\r\n    let expires = \"\";\r\n\r\n    if (!!expiresInSeconds) {\r\n      const date = new Date();\r\n      date.setTime(date.getTime() + expiresInSeconds * 1000);\r\n      expires = \"; expires=\" + date.toUTCString();\r\n    }\r\n\r\n    document.cookie = `${key}=${value}${expires}; path=/`;\r\n  }\r\n}\r\n\r\nexport const cookieService = new CookieService();\r\n","import React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport { useAuth } from \"./auth\";\r\n\r\nimport { SpotifyUserGetResponse, SpotifyDevicesResponse, SpotifyDevice } from \"../@types/spotify\";\r\nimport { SpotifyUtil } from \"../utils/spotify\";\r\n\r\ninterface Props {}\r\n\r\nexport interface User {\r\n  id: string;\r\n  avatarSrc: string;\r\n  email: string;\r\n  name: string;\r\n  link: string;\r\n  uri: string;\r\n}\r\n\r\ninterface BasicUser {\r\n  spotifyUri: string;\r\n  name: string;\r\n  avatarSrc: string;\r\n}\r\n\r\ninterface Context {\r\n  getAvailableDevices: () => Promise<SpotifyDevice[]>;\r\n  profile: User;\r\n}\r\n\r\nconst UserContext = createContext({} as any);\r\nconst spotifyUserEndpoint = `${SpotifyUtil.getApiUrl()}/me`;\r\n\r\nconst apiEndpoint = process.env.REACT_APP_API_HOST || \"https://localhost:44301/api\";\r\nconst userApiEndpoint = `${apiEndpoint}/user`;\r\nconst useGTM = process.env.REACT_APP_USE_GTM !== \"false\";\r\n\r\nexport function UserProvider(props: Props) {\r\n  const { isAuthenticated, requestService } = useAuth();\r\n  const [profile, setProfile] = useState<User>({} as any);\r\n\r\n  async function load(): Promise<void> {\r\n    const { data } = await requestService.get<SpotifyUserGetResponse>(spotifyUserEndpoint);\r\n    const {\r\n      id,\r\n      email,\r\n      display_name: name,\r\n      external_urls: { spotify: link },\r\n      images,\r\n      uri,\r\n    } = data;\r\n    const avatarSrc = images[0]?.url;\r\n\r\n    setProfile({ id, email, name, link, avatarSrc, uri });\r\n\r\n    tryToSaveAtApi({ avatarSrc, spotifyUri: uri, name });\r\n  }\r\n\r\n  async function getAvailableDevices(): Promise<SpotifyDevice[]> {\r\n    const endpoint = `${spotifyUserEndpoint}/player/devices`;\r\n    const { data } = await requestService.get<SpotifyDevicesResponse>(endpoint);\r\n\r\n    return data.devices;\r\n  }\r\n\r\n  async function tryToSaveAtApi(basicUser: BasicUser): Promise<void> {\r\n    if (!useGTM) { \r\n      await requestService.post({\r\n        url: userApiEndpoint,\r\n        data: basicUser,\r\n      });\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      load();\r\n    } else {\r\n      setProfile({} as any);\r\n    } // eslint-disable-next-line\r\n  }, [isAuthenticated]);\r\n\r\n  return <UserContext.Provider value={{ getAvailableDevices, profile }} {...props} />;\r\n}\r\n\r\nexport const useUser = () => useContext<Context>(UserContext);\r\n","import { SpotifyImage } from \"../@types/spotify\";\r\nimport { CustomImage } from \"../@types/music\";\r\n\r\nexport class ImageMapper {\r\n  static toCustom(alt: string, images: SpotifyImage[]): CustomImage {\r\n    return {\r\n      alt,\r\n      src: images[0]?.url,\r\n    };\r\n  }\r\n}\r\n","import { ImageMapper } from \"./image\";\r\nimport { Music, Album } from \"../@types/music\";\r\nimport { SpotifyTracksSearchItem, SpotifyImage } from \"../@types/spotify\";\r\n\r\nexport class MusicMapper {\r\n  static toMusicTrack({ name, album, uri }: Spotify.Track): Music {\r\n    return {\r\n      id: uri,\r\n      image: ImageMapper.toCustom(name, album.images as SpotifyImage[]),\r\n      name,\r\n      album: {\r\n        id: album.uri,\r\n        name: album.name,\r\n        image: ImageMapper.toCustom(album.name, album.images as SpotifyImage[]),\r\n      },\r\n      uri,\r\n    };\r\n  }\r\n\r\n  static toMusic({ id, name, album, uri }: SpotifyTracksSearchItem): Music {\r\n    return {\r\n      id,\r\n      image: ImageMapper.toCustom(name, album.images),\r\n      name,\r\n      album: {\r\n        id: album.id,\r\n        name: album.name,\r\n        image: ImageMapper.toCustom(album.name, album.images),\r\n      },\r\n      uri,\r\n    };\r\n  }\r\n\r\n  static toAlbum({ id, name, images }: import(\"../@types/spotify\").SpotifyAlbum): Album {\r\n    return {\r\n      id,\r\n      name,\r\n      image: ImageMapper.toCustom(name, images),\r\n    };\r\n  }\r\n}\r\n","export class TimerUtil {\r\n  static debounce(callback: Function, wait: number): Function {\r\n    let timeout: NodeJS.Timeout | null;\r\n\r\n    return (...params: any[]): void => {\r\n      if (timeout != null) {\r\n        clearTimeout(timeout);\r\n      }\r\n\r\n      timeout = setTimeout((): void => {\r\n        timeout = null;\r\n        callback(...params);\r\n      }, wait);\r\n    };\r\n  }\r\n\r\n  static async wait(time: number): Promise<void> {\r\n    return new Promise((resolve) => setTimeout(() => resolve(), time));\r\n  }\r\n}\r\n","import { EventType } from \"../contexts/event\";\r\n\r\nconst musicHistory: string[] = [];\r\n\r\nexport class PlayerUtil {\r\n  static stateToEvent(state: Spotify.PlaybackState): { type: EventType, value: string } {\r\n    const { current_track } = state?.track_window;\r\n    const lastMusic = musicHistory[musicHistory.length - 1]\r\n    const value = current_track.uri;\r\n    let type = EventType.PLAY_MUSIC\r\n\r\n    if (value == null)\r\n      throw new Error(\"Invalid current track\");\r\n\r\n    if (state.paused)\r\n      type = EventType.PAUSE_MUSIC\r\n    else if (lastMusic != null) {\r\n      if (lastMusic !== value)\r\n        type = EventType.CHANGE_MUSIC\r\n      else if (state?.position === 0)\r\n        type = EventType.RESTART_MUSIC\r\n    }\r\n\r\n    if (lastMusic !== value)\r\n      musicHistory.push(value)\r\n\r\n    return {\r\n      type,\r\n      value\r\n    }\r\n  }\r\n}\r\n","import React, { createContext, useContext, useEffect, useState } from \"react\";\r\n\r\nimport { useAuth } from \"./auth\";\r\nimport { SpotifyUtil, SpotifyPlayer } from \"../utils/spotify\";\r\nimport { Music } from \"../@types/music\";\r\nimport { MusicMapper } from \"../mappers/music\";\r\nimport { SpotifyPlayerResponse } from \"../@types/spotify\";\r\nimport { TimerUtil } from \"../utils/timer\";\r\nimport { PlayerUtil } from \"../utils/player\";\r\nimport { useEvents } from \"./event\";\r\n\r\ninterface Props {}\r\n\r\ninterface Context {\r\n  isPlayerReady: boolean;\r\n  isPluginPlayerActive: boolean;\r\n  nextTrack: () => Promise<void>;\r\n  playingMusicInfo?: PlayingMusicInfo;\r\n  previousTrack: () => Promise<void>;\r\n  togglePlay: () => Promise<void>;\r\n  transferUserPlaybackToPlugin: () => Promise<void>;\r\n}\r\n\r\nexport interface PlayingMusicInfo {\r\n  position: number;\r\n  duration: number;\r\n  currentTrack: Music;\r\n  paused: boolean;\r\n}\r\n\r\nconst MusicContext = createContext<Context>({} as any);\r\nconst spotifyUserEndpoint = `${SpotifyUtil.getApiUrl()}/me`;\r\n\r\nconst debounce = TimerUtil.debounce((state: Spotify.PlaybackState, saveEvent: Function) => {\r\n  var { type, value } = PlayerUtil.stateToEvent(state);\r\n\r\n  saveEvent(type, value);\r\n}, 1000);\r\n\r\nexport function PlayerProvider(props: Props) {\r\n  const { accessToken, isAuthenticated, requestService } = useAuth();\r\n  const [player, setPlayer] = useState<SpotifyPlayer | null>(null);\r\n  const [isPluginPlayerActive, setIsPluginPlayerActive] = useState<any>(null);\r\n  const [isPlayerReady, setIsPlayerReady] = useState<any>(null);\r\n  const [playingMusicInfo, setPlayingMusicInfo] = useState<PlayingMusicInfo | undefined>();\r\n  const { save: saveEvent } = useEvents();\r\n\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      createSpotifyPlayerIfNeedAndValidatePlayer();\r\n    } // eslint-disable-next-line\r\n  }, [accessToken, isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    setIsPlayerReady(player != null);\r\n\r\n    if (player != null) {\r\n      player.original.addListener(\"player_state_changed\", (state) => {\r\n        const {\r\n          position,\r\n          duration,\r\n          paused,\r\n          track_window: { current_track },\r\n        } = state;\r\n\r\n        debounce(state, saveEvent);\r\n        setPlayingMusicInfo({ currentTrack: MusicMapper.toMusicTrack(current_track), duration, position, paused });\r\n      });\r\n    } // eslint-disable-next-line\r\n  }, [player]);\r\n\r\n  async function createSpotifyPlayerIfNeed(): Promise<void> {\r\n    const player = await SpotifyUtil.createPlayer(accessToken);\r\n\r\n    setPlayer(player);\r\n  }\r\n\r\n  async function createSpotifyPlayerIfNeedAndValidatePlayer(): Promise<void> {\r\n    await createSpotifyPlayerIfNeed();\r\n    await loadCurrentPlayerInfo();\r\n  }\r\n\r\n  async function getCurrentPlayerInfo(): Promise<SpotifyPlayerResponse | null> {\r\n    const { data } = await requestService.get<SpotifyPlayerResponse | null>(`${spotifyUserEndpoint}/player`);\r\n\r\n    return data;\r\n  }\r\n\r\n  async function loadCurrentPlayerInfo(): Promise<void> {\r\n    const currentPlayer = await getCurrentPlayerInfo();\r\n\r\n    setIsPluginPlayerActive((currentPlayer?.device != null && player?.device_id) === currentPlayer?.device?.id);\r\n  }\r\n\r\n  async function nextTrack(): Promise<void> {\r\n    if (player == null) {\r\n      throw new Error(\"You have to login first!\");\r\n    }\r\n\r\n    await player.original.nextTrack();\r\n  }\r\n\r\n  async function previousTrack(): Promise<void> {\r\n    if (player == null) {\r\n      throw new Error(\"You have to login first!\");\r\n    }\r\n\r\n    await player.original.previousTrack();\r\n  }\r\n\r\n  async function togglePlay(): Promise<void> {\r\n    if (player == null) {\r\n      throw new Error(\"You have to login first!\");\r\n    }\r\n\r\n    await player.original.togglePlay();\r\n  }\r\n\r\n  async function transferUserPlaybackToPlugin(): Promise<void> {\r\n    const endpoint = `${spotifyUserEndpoint}/player`;\r\n\r\n    await requestService.put({\r\n      url: endpoint,\r\n      data: {\r\n        device_ids: [player?.device_id],\r\n      },\r\n    });\r\n    await TimerUtil.wait(500);\r\n    await loadCurrentPlayerInfo();\r\n  }\r\n\r\n  return (\r\n    <MusicContext.Provider\r\n      value={{\r\n        isPlayerReady,\r\n        isPluginPlayerActive,\r\n        nextTrack,\r\n        playingMusicInfo,\r\n        previousTrack,\r\n        togglePlay,\r\n        transferUserPlaybackToPlugin,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport const usePlayer = () => useContext<Context>(MusicContext);\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"title\", null, \"Audio Wave\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"wave-svg-line-1\",\n  \"data-name\": \"Line 1\",\n  d: \"M0.91,15L0.78,15A1,1,0,0,0,0,16v6a1,1,0,1,0,2,0s0,0,0,0V16a1,1,0,0,0-1-1H0.91Z\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"wave-svg-line-2\",\n  \"data-name\": \"Line 2\",\n  d: \"M6.91,9L6.78,9A1,1,0,0,0,6,10V28a1,1,0,1,0,2,0s0,0,0,0V10A1,1,0,0,0,7,9H6.91Z\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"wave-svg-line-3\",\n  \"data-name\": \"Line 3\",\n  d: \"M12.91,0L12.78,0A1,1,0,0,0,12,1V37a1,1,0,1,0,2,0s0,0,0,0V1a1,1,0,0,0-1-1H12.91Z\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"wave-svg-line-4\",\n  \"data-name\": \"Line 4\",\n  d: \"M18.91,10l-0.12,0A1,1,0,0,0,18,11V27a1,1,0,1,0,2,0s0,0,0,0V11a1,1,0,0,0-1-1H18.91Z\"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"wave-svg-line-5\",\n  \"data-name\": \"Line 5\",\n  d: \"M24.91,15l-0.12,0A1,1,0,0,0,24,16v6a1,1,0,0,0,2,0s0,0,0,0V16a1,1,0,0,0-1-1H24.91Z\"\n});\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"wave-svg-line-6\",\n  \"data-name\": \"Line 6\",\n  d: \"M30.91,10l-0.12,0A1,1,0,0,0,30,11V27a1,1,0,1,0,2,0s0,0,0,0V11a1,1,0,0,0-1-1H30.91Z\"\n});\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"wave-svg-line-7\",\n  \"data-name\": \"Line 7\",\n  d: \"M36.91,0L36.78,0A1,1,0,0,0,36,1V37a1,1,0,1,0,2,0s0,0,0,0V1a1,1,0,0,0-1-1H36.91Z\"\n});\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"wave-svg-line-8\",\n  \"data-name\": \"Line 8\",\n  d: \"M42.91,9L42.78,9A1,1,0,0,0,42,10V28a1,1,0,1,0,2,0s0,0,0,0V10a1,1,0,0,0-1-1H42.91Z\"\n});\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"path\", {\n  className: \"wave-svg-line-9\",\n  \"data-name\": \"Line 9\",\n  d: \"M48.91,15l-0.12,0A1,1,0,0,0,48,16v6a1,1,0,1,0,2,0s0,0,0,0V16a1,1,0,0,0-1-1H48.91Z\"\n});\n\nvar SvgLoader = function SvgLoader(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"wave-svg\",\n    \"data-name\": \"Layer 1\",\n    viewBox: \"0 0 50 38.05\",\n    ref: svgRef\n  }, props), title === undefined ? _ref2 : title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLoader, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/loader.6699e396.svg\";\nexport { ForwardRef as ReactComponent };","import \"./style.scss\";\r\nimport React from \"react\";\r\n\r\nimport { ReactComponent as LoaderSvg } from \"./loader.svg\";\r\n\r\nexport function Loader(): React.ReactElement {\r\n  return (\r\n    <div className=\"loader-component\">\r\n      <LoaderSvg />\r\n    </div>\r\n  );\r\n}\r\n","import { Artist } from \"../services/artist\";\r\nimport { SpotifyArtistsSearchItem, SpotifyTracksSearchItem } from \"../@types/spotify\";\r\nimport { MusicMapper } from \"./music\";\r\n\r\nexport class SearchMapper {\r\n  static toArtist({ uri, name, images }: SpotifyArtistsSearchItem): Artist {\r\n    return {\r\n      id: uri,\r\n      name,\r\n      image: {\r\n        alt: name,\r\n        src: images[0]?.url,\r\n      },\r\n    };\r\n  }\r\n\r\n  static toMusic(track: SpotifyTracksSearchItem): import(\"../@types/music\").Music {\r\n    return MusicMapper.toMusic(track);\r\n  }\r\n}\r\n","import React, { createContext, useContext } from \"react\";\r\n\r\nimport { Artist } from \"../services/artist\";\r\nimport { SearchMapper } from \"../mappers/search\";\r\nimport { SpotifySearchResponse } from \"../@types/spotify\";\r\nimport { SpotifyUtil } from \"../utils/spotify\";\r\nimport { useAuth } from \"./auth\";\r\nimport { Music } from \"../@types/music\";\r\n\r\ninterface Props {}\r\n\r\ninterface Context {\r\n  searchArtists: (text: string) => Promise<Artist[]>;\r\n  searchMusic: (text: string) => Promise<Music[]>;\r\n}\r\n\r\nconst SearchContext = createContext({} as any);\r\nconst spotifySearchEndpoint = `${SpotifyUtil.getApiUrl()}/search`;\r\n\r\ntype SpotifySearchType = \"album\" | \"artist\" | \"playlist\" | \"track\" | \"show\" | \"episode\";\r\n\r\nexport function SearchProvider(props: Props) {\r\n  const { requestService } = useAuth();\r\n\r\n  async function search(text: string, type: SpotifySearchType): Promise<SpotifySearchResponse> {\r\n    const { data } = await requestService.get<SpotifySearchResponse>({\r\n      url: spotifySearchEndpoint,\r\n      params: { q: text, type },\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  async function searchArtists(text: string): Promise<Artist[]> {\r\n    const { artists } = await search(text, \"artist\");\r\n\r\n    if (!artists) {\r\n      throw new Error(\"Invalid response\");\r\n    }\r\n\r\n    return artists.items.map(SearchMapper.toArtist);\r\n  }\r\n\r\n  async function searchMusic(text: string): Promise<Music[]> {\r\n    const { tracks } = await search(text, \"track\");\r\n\r\n    if (!tracks) {\r\n      throw new Error(\"Invalid response\");\r\n    }\r\n\r\n    return tracks.items.map(SearchMapper.toMusic);\r\n  }\r\n\r\n  return <SearchContext.Provider value={{ searchArtists, searchMusic }} {...props} />;\r\n}\r\n\r\nexport const useSearch = () => useContext<Context>(SearchContext);\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\n\r\nimport { cookieService } from \"../services/storage\";\r\nimport { SpotifyUtil } from \"../utils/spotify\";\r\nimport { StringUtil } from \"../utils/string\";\r\nimport { SpotifyRequestService } from \"../services/request\";\r\n\r\ninterface Props {}\r\ninterface Context {\r\n  accessToken: string;\r\n  isAuthenticated: boolean;\r\n  logout: () => void;\r\n  requestService: SpotifyRequestService;\r\n  saveToken: (redirectUrl: string) => void;\r\n}\r\n\r\nconst COOKIE_NAME = process.env.REACT_APP_COOKIE_NAME || \"SpotifyToken\";\r\nconst AuthContext = createContext({ isAuthenticated: false } as any);\r\n\r\nexport function AuthProvider(props: Props) {\r\n  const [accessToken, setAccessToken] = useState<null | string>(cookieService.get(COOKIE_NAME));\r\n  const [requestService, setRequestService] = useState(new SpotifyRequestService(accessToken));\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  function logout(): void {\r\n    setAccessToken(null);\r\n    cookieService.delete(COOKIE_NAME);\r\n  }\r\n\r\n  function saveToken(redirectUrl: string): void {\r\n    const { accessToken: newAccessToken, expiresInSeconds } = SpotifyUtil.getTokenAndInfoFromRedirectUrl(redirectUrl);\r\n\r\n    cookieService.save(COOKIE_NAME, newAccessToken, expiresInSeconds);\r\n    setAccessToken(newAccessToken);\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsAuthenticated(!StringUtil.isEmpty(accessToken));\r\n    setRequestService(new SpotifyRequestService(accessToken));\r\n  }, [accessToken]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ logout, saveToken, isAuthenticated, accessToken, requestService }} {...props} />\r\n  );\r\n}\r\n\r\nexport const useAuth = () => React.useContext<Context>(AuthContext);\r\n","import React, { createContext, useContext } from \"react\";\r\nimport { requestService } from \"../services/request\";\r\nimport { StringUtil } from \"../utils/string\";\r\n\r\nexport interface Activity {\r\n  id: string;\r\n  name: string;\r\n  createdDate?: string;\r\n}\r\n\r\ninterface Props {}\r\n\r\ninterface Context {\r\n  search: (text?: string) => Promise<Activity[]>;\r\n}\r\n\r\nconst USE_API = process.env.REACT_APP_USE_API_TO_LOAD_ACTIVITY === \"true\";\r\nconst apiEndpoint = process.env.REACT_APP_API_HOST || \"https://localhost:44301/api\";\r\nconst eventApiEndpoint = `${apiEndpoint}/activities`;\r\nconst baseHost = process.env.REACT_APP_HOST_URL || \"https://ericoloewe.github.io/computer-science-tcc\";\r\n\r\nconst ActivityContext = createContext({} as any);\r\n\r\nexport function ActivityProvider(props: Props) {\r\n  async function search(text?: string): Promise<Activity[]> {\r\n    return USE_API ? searchFromApi(text) : searchFromJson(text);\r\n  }\r\n\r\n  async function searchFromJson(text?: string): Promise<Activity[]> {\r\n    const { data } = await requestService.get<string[]>(`${baseHost}/activities.json`);\r\n\r\n    return data\r\n      .filter((l) => !text || l.toLowerCase().includes(text?.toLowerCase()))\r\n      .map((l) => ({\r\n        id: StringUtil.toKebabCase(l),\r\n        name: l,\r\n      }));\r\n  }\r\n\r\n  async function searchFromApi(text?: string): Promise<Activity[]> {\r\n    const { data } = await requestService.get<Activity[]>({\r\n      url: eventApiEndpoint,\r\n      params: { text },\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  return <ActivityContext.Provider value={{ search }} {...props} />;\r\n}\r\n\r\nexport const useActivity = () => useContext<Context>(ActivityContext);\r\n","import React, { createContext, useContext } from \"react\";\r\nimport { requestService } from \"../services/request\";\r\nimport { StringUtil } from \"../utils/string\";\r\n\r\nexport interface Feeling {\r\n  id: string;\r\n  name: string;\r\n  createdDate?: string;\r\n}\r\n\r\ninterface Props {}\r\n\r\ninterface Context {\r\n  search: (text?: string) => Promise<Feeling[]>;\r\n}\r\n\r\nconst USE_API = process.env.REACT_APP_USE_API_TO_LOAD_FEELINGS === \"true\";\r\nconst apiEndpoint = process.env.REACT_APP_API_HOST || \"https://localhost:44301/api\";\r\nconst eventApiEndpoint = `${apiEndpoint}/feelings`;\r\nconst baseHost = process.env.REACT_APP_HOST_URL || \"https://ericoloewe.github.io/computer-science-tcc\";\r\n\r\nconst FeelingContext = createContext({} as any);\r\n\r\nexport function FeelingProvider(props: Props) {\r\n  async function search(text?: string): Promise<Feeling[]> {\r\n    return USE_API ? searchFromApi(text) : searchFromJson(text);\r\n  }\r\n\r\n  async function searchFromJson(text?: string): Promise<Feeling[]> {\r\n    const { data } = await requestService.get<string[]>(`${baseHost}/feelings.json`);\r\n\r\n    return data\r\n      .filter((l) => !text || l.toLowerCase().includes(text?.toLowerCase()))\r\n      .map((l) => ({\r\n        id: StringUtil.toKebabCase(l),\r\n        name: l,\r\n      }));\r\n  }\r\n\r\n  async function searchFromApi(text?: string): Promise<Feeling[]> {\r\n    const { data } = await requestService.get<Feeling[]>({\r\n      url: eventApiEndpoint,\r\n      params: { text },\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  return <FeelingContext.Provider value={{ search }} {...props} />;\r\n}\r\n\r\nexport const useFeeling = () => useContext<Context>(FeelingContext);\r\n","import React, { createContext, useContext } from \"react\";\r\nimport { requestService } from \"../services/request\";\r\nimport { StringUtil } from \"../utils/string\";\r\n\r\nexport interface Location {\r\n  id: string;\r\n  name: string;\r\n  createdDate?: string;\r\n}\r\n\r\ninterface Props {}\r\n\r\ninterface Context {\r\n  search: (text?: string) => Promise<Location[]>;\r\n}\r\n\r\nconst apiEndpoint = process.env.REACT_APP_API_HOST || \"https://localhost:44301/api\";\r\nconst eventApiEndpoint = `${apiEndpoint}/locations`;\r\nconst USE_API = process.env.REACT_APP_USE_API_TO_LOAD_LOCATION === \"true\";\r\nconst baseHost = process.env.REACT_APP_HOST_URL || \"https://ericoloewe.github.io/computer-science-tcc\";\r\n\r\nconst LocationContext = createContext({} as any);\r\n\r\nexport function LocationProvider(props: Props) {\r\n  async function search(text?: string): Promise<Location[]> {\r\n    return USE_API ? searchFromApi(text) : searchFromJson(text);\r\n  }\r\n\r\n  async function searchFromJson(text?: string): Promise<Location[]> {\r\n    const { data } = await requestService.get<string[]>(`${baseHost}/locations.json`);\r\n\r\n    return data\r\n      .filter((l) => !text || l.toLowerCase().includes(text?.toLowerCase()))\r\n      .map((l) => ({\r\n        id: StringUtil.toKebabCase(l),\r\n        name: l,\r\n      }));\r\n  }\r\n\r\n  async function searchFromApi(text?: string): Promise<Location[]> {\r\n    const { data } = await requestService.get<Location[]>({\r\n      url: eventApiEndpoint,\r\n      params: { text },\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  return <LocationContext.Provider value={{ search }} {...props} />;\r\n}\r\n\r\nexport const useLocation = () => useContext<Context>(LocationContext);\r\n","import axios, { AxiosResponse } from \"axios\";\r\nimport { StringUtil } from \"../utils/string\";\r\n\r\nexport interface GetRequest {\r\n  url: string;\r\n  headers?: object;\r\n  params?: object;\r\n}\r\n\r\nexport interface PostRequest {\r\n  url: string;\r\n  headers?: object;\r\n  data?: object;\r\n}\r\n\r\nexport interface Response<T> {\r\n  headers?: object;\r\n  data: T;\r\n  status: number;\r\n}\r\n\r\ntype Request = GetRequest | PostRequest;\r\n\r\nclass RequestService {\r\n  async get<T>(getRequest: string | GetRequest): Promise<Response<T>> {\r\n    let request: GetRequest = this.parseRequest(getRequest);\r\n    const response = await axios(request);\r\n\r\n    return this.mapAxiosToResponse(response);\r\n  }\r\n\r\n  async post<T>(postRequest: string | PostRequest): Promise<Response<T>> {\r\n    let request: PostRequest = this.parseRequest(postRequest);\r\n    const response = await axios({ ...request, method: \"post\" });\r\n\r\n    return this.mapAxiosToResponse(response);\r\n  }\r\n\r\n  async put<T>(putRequest: string | PostRequest): Promise<Response<T>> {\r\n    let request: PostRequest = this.parseRequest(putRequest);\r\n    const response = await axios({ ...request, method: \"put\" });\r\n\r\n    return this.mapAxiosToResponse(response);\r\n  }\r\n\r\n  protected parseRequest(getRequest: string | Request): Request {\r\n    let request: Request = getRequest as Request;\r\n\r\n    if (StringUtil.isString(getRequest)) {\r\n      request = { url: getRequest as string };\r\n    }\r\n\r\n    return request;\r\n  }\r\n\r\n  private mapAxiosToResponse<T>(response: AxiosResponse): Response<T> {\r\n    const { data, headers, status } = response;\r\n\r\n    return {\r\n      data,\r\n      headers,\r\n      status,\r\n    };\r\n  }\r\n}\r\n\r\nexport class SpotifyRequestService extends RequestService {\r\n  accessToken: string | null;\r\n\r\n  constructor(accessToken: string | null) {\r\n    super();\r\n    this.accessToken = accessToken;\r\n  }\r\n\r\n  protected parseRequest(getRequest: string | Request): Request {\r\n    const request = super.parseRequest(getRequest);\r\n\r\n    if (this.accessToken == null) {\r\n      throw new Error(\"No access token, you must login!\");\r\n    }\r\n\r\n    request.headers = {\r\n      Authorization: `Bearer ${this.accessToken}`,\r\n    };\r\n\r\n    return request;\r\n  }\r\n}\r\n\r\nexport const requestService = new RequestService();\r\n","export class StringUtil {\r\n  static isEmpty<T>(any: T): boolean {\r\n    return any == null || (typeof any === \"string\" && any.trim().length === 0);\r\n  }\r\n\r\n  static isString<T>(any: T): boolean {\r\n    return typeof any === \"string\";\r\n  }\r\n\r\n  static sliceIfNeed(str: string, size: number = 50): string {\r\n    return str.length > size ? `${str.slice(0, size)}...` : str;\r\n  }\r\n\r\n  static toKebabCase(str: string): string {\r\n    return str\r\n      .normalize('NFD')\r\n      .replace(/[\\u0300-\\u036f]/g, '')\r\n      .replace(/[^-\\w ]/g, '')\r\n      .replace(/-+/g, ' ')\r\n      .trim()\r\n      .replace(/ +/g, '-')\r\n      .toLowerCase()\r\n  }\r\n\r\n  static toString(str: any): string {\r\n    if (!str) {\r\n      throw new Error(\"Invalid str\");\r\n    }\r\n\r\n    return str.toString();\r\n  }\r\n\r\n  static toStringOrDefault(str: any, def: string): string {\r\n    return !str ? def : str.toString();\r\n  }\r\n}\r\n"],"sourceRoot":""}