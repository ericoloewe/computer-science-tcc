{"version":3,"sources":["pages/artists/index.tsx","pages/shared/layout/custom-drawer.tsx","pages/shared/layout/custom-menu.tsx","pages/shared/layout/index.tsx","components/choose/index.tsx"],"names":["debounce","TimerUtil","searchText","searchArtistsOfTexts","history","useHistory","saveEvent","useEvents","save","searchArtists","useSearch","useState","setSearchText","artists","setArtists","selectedArtistsMap","setSelectedArtists","markSelectedArtists","musics","musicsMappedWithSelected","map","m","selected","id","text","a","items","StringUtil","isEmpty","title","name","genresToSave","Object","keys","k","join","EventType","LIKED_ARTIST","push","useEffect","className","pageTitle","hideDrawerButton","onChangeSearch","s","onChoose","artist","searchLabel","searchValue","variant","color","onClick","CustomDrawer","isOpen","onClose","useUser","profile","avatarSrc","email","link","Drawer","anchor","open","List","component","aria-label","ListItem","button","props","href","target","ListItemAvatar","Avatar","src","alt","ListItemText","primary","secondary","Divider","Link","to","ListItemIcon","Home","Face","LibraryMusic","ExitToApp","CustomMenu","menuItems","anchorEl","setAnchorEl","IconButton","edge","e","currentTarget","MoreVert","keepMounted","Boolean","React","Children","mi","cloneElement","Layout","children","isDrawerOpen","setDrawerOpen","AppBar","position","Toolbar","Menu","Typography","style","flexGrow","Choose","label","onChange","value","dense","ci","key","image","description","paragraph"],"mappings":"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","file":"static/js/11.6f97694c.chunk.js","sourcesContent":["import \"./style.scss\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Choose, ChooseItem } from \"../../components/choose\";\r\nimport { Layout } from \"../shared/layout\";\r\nimport { StringUtil } from \"../../utils/string\";\r\nimport { TimerUtil } from \"../../utils/timer\";\r\nimport { useSearch } from \"../../contexts/search\";\r\nimport { EventType, useEvents } from \"../../contexts/event\";\r\n\r\nconst debounce = TimerUtil.debounce(\r\n  (searchText: string, searchArtistsOfTexts: Function) => searchArtistsOfTexts(searchText),\r\n  1200\r\n);\r\n\r\nexport default function () {\r\n  const history = useHistory();\r\n  const { save: saveEvent } = useEvents();\r\n  const { searchArtists } = useSearch();\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [artists, setArtists] = useState([] as ChooseItem[]);\r\n  const [selectedArtistsMap, setSelectedArtists] = useState({} as { [key: string]: ChooseItem });\r\n\r\n  function chooseArtist(artist: ChooseItem) {\r\n    if (selectedArtistsMap[artist.id] != null) {\r\n      delete selectedArtistsMap[artist.id];\r\n    } else {\r\n      selectedArtistsMap[artist.id] = artist;\r\n    }\r\n\r\n    setSelectedArtists({ ...selectedArtistsMap });\r\n  }\r\n\r\n  function markSelectedArtists(musics: ChooseItem[]) {\r\n    const musicsMappedWithSelected = musics.map((m) => ({ ...m, selected: selectedArtistsMap[m.id] != null }));\r\n\r\n    setArtists(musicsMappedWithSelected);\r\n  }\r\n\r\n  async function searchArtistsOfTexts(text: string) {\r\n    let items: ChooseItem[] = [];\r\n\r\n    if (!StringUtil.isEmpty(searchText)) {\r\n      const artists = await searchArtists(text);\r\n      items = artists.map((a) => ({ ...a, title: a.name }));\r\n\r\n      setArtists([...items]);\r\n      markSelectedArtists(items);\r\n    }\r\n\r\n    setArtists([...items]);\r\n  }\r\n\r\n  useEffect(() => {\r\n    markSelectedArtists(artists); // eslint-disable-next-line\r\n  }, [selectedArtistsMap]);\r\n\r\n  useEffect(() => {\r\n    debounce(searchText, searchArtistsOfTexts); // eslint-disable-next-line\r\n  }, [searchText]);\r\n\r\n  async function saveAndGoHome() {\r\n    const genresToSave = Object.keys(selectedArtistsMap)\r\n      .map((k) => selectedArtistsMap[k].id)\r\n      .join(\";\");\r\n\r\n    await saveEvent(EventType.LIKED_ARTIST, genresToSave);\r\n    history.push(`/`);\r\n  }\r\n\r\n  return (\r\n    <Layout className=\"artists-page\" pageTitle=\"Artistas preferidos\" hideDrawerButton={true}>\r\n      <Choose\r\n        items={artists}\r\n        onChangeSearch={(s) => setSearchText(s)}\r\n        onChoose={chooseArtist}\r\n        searchLabel=\"Nome do artista\"\r\n        searchValue={searchText}\r\n      />\r\n      <Button variant=\"contained\" color=\"primary\" onClick={saveAndGoHome}>\r\n        Proximo\r\n      </Button>\r\n    </Layout>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Drawer, List, ListItem, ListItemIcon, ListItemText, Divider, ListItemAvatar, Avatar } from \"@material-ui/core\";\r\nimport {\r\n  Home as HomeIcon,\r\n  ExitToApp as ExitToAppIcon,\r\n  LibraryMusic as LibraryMusicIcon,\r\n  Face as FaceIcon,\r\n} from \"@material-ui/icons\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useUser } from \"../../../contexts/user\";\r\n\r\nexport interface DrawerProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nexport function CustomDrawer({ isOpen, onClose }: DrawerProps) {\r\n  const {\r\n    profile: { avatarSrc, email, name, link },\r\n  } = useUser();\r\n  // eslint-disable-next-line\r\n  const customLink = (props: any) => <a {...props} />;\r\n\r\n  return (\r\n    <Drawer anchor=\"left\" open={isOpen} onClose={onClose}>\r\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n        <ListItem button {...{ component: customLink, href: link, target: \"_blank\" }}>\r\n          <ListItemAvatar>\r\n            <Avatar src={avatarSrc} alt=\"User avatar\" />\r\n          </ListItemAvatar>\r\n          <ListItemText primary={name} secondary={email} />\r\n        </ListItem>\r\n        <Divider />\r\n        <ListItem button {...{ component: Link, to: `/` }}>\r\n          <ListItemIcon>\r\n            <HomeIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Home\" />\r\n        </ListItem>\r\n        <ListItem button {...{ component: Link, to: `/new-context/artists` }}>\r\n          <ListItemIcon>\r\n            <FaceIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Artistas preferidos\" />\r\n        </ListItem>\r\n        <ListItem button {...{ component: Link, to: `/new-context/gender` }}>\r\n          <ListItemIcon>\r\n            <LibraryMusicIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Generos preferidos\" />\r\n        </ListItem>\r\n        <ListItem button {...{ component: Link, to: `/logout` }}>\r\n          <ListItemIcon>\r\n            <ExitToAppIcon />\r\n          </ListItemIcon>\r\n          <ListItemText primary=\"Sair\" />\r\n        </ListItem>\r\n      </List>\r\n    </Drawer>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { IconButton, Menu } from \"@material-ui/core\";\r\nimport { MoreVert as MoreVertIcon } from \"@material-ui/icons\";\r\n\r\nexport function CustomMenu({ menuItems }: { menuItems: JSX.Element[] }): React.ReactElement {\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n\r\n  return (\r\n    <>\r\n      <IconButton edge=\"end\" color=\"inherit\" aria-label=\"more\" onClick={(e) => setAnchorEl(e.currentTarget)}>\r\n        <MoreVertIcon />\r\n      </IconButton>\r\n      <Menu id=\"simple-menu\" anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)} onClose={() => setAnchorEl(null)}>\r\n        {React.Children.map(menuItems, (mi) => {\r\n          return React.cloneElement(mi, {\r\n            ...mi.props,\r\n            onClick: (e: any) => {\r\n              const { onClick } = mi.props;\r\n              setAnchorEl(null);\r\n              onClick && onClick(e);\r\n            },\r\n          });\r\n        })}\r\n      </Menu>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./style.scss\";\n\nimport { AppBar, Toolbar, IconButton, Typography } from \"@material-ui/core\";\nimport { Menu as MenuIcon } from \"@material-ui/icons\";\n\nimport { CustomDrawer } from \"./custom-drawer\";\nimport { CustomMenu } from \"./custom-menu\";\n\ninterface Props {\n  children: React.ReactElement | React.ReactElement[];\n  className?: string;\n  hideDrawerButton?: boolean;\n  menuItems?: JSX.Element[];\n  pageTitle: string;\n}\n\nexport function Layout({ className, children, hideDrawerButton, menuItems, pageTitle }: Props) {\n  const [isDrawerOpen, setDrawerOpen] = useState(false);\n\n  return (\n    <div className=\"root-layout\">\n      <header className=\"header\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            {!hideDrawerButton && (\n              <IconButton\n                edge=\"start\"\n                className={\"classes.menuButton\"}\n                color=\"inherit\"\n                aria-label=\"menu\"\n                onClick={() => setDrawerOpen(true)}\n              >\n                <MenuIcon />\n              </IconButton>\n            )}\n            <Typography variant=\"h6\" className={\"title\"}>\n              {pageTitle}\n            </Typography>\n            <div style={{ flexGrow: 1 }} />\n            {!!menuItems && <CustomMenu menuItems={menuItems} />}\n          </Toolbar>\n        </AppBar>\n      </header>\n      <article className={className}>{children}</article>\n      <CustomDrawer isOpen={isDrawerOpen} onClose={() => setDrawerOpen(false)} />\n    </div>\n  );\n}\n\n","import \"./style.scss\";\r\nimport React from \"react\";\r\nimport { TextField, ListItem, ListItemAvatar, Avatar, ListItemText, List, Paper, Typography } from \"@material-ui/core\";\r\n\r\ninterface Props {\r\n  items: ChooseItem[];\r\n  onChoose?: (item: ChooseItem) => void;\r\n  searchLabel?: string;\r\n  searchValue?: string;\r\n  onChangeSearch?: (s: string) => void;\r\n}\r\n\r\nexport interface ChooseItem {\r\n  id: string;\r\n  title: string;\r\n  description?: string;\r\n  image?: { src: string; alt: string };\r\n  selected?: boolean;\r\n}\r\n\r\nexport function Choose({ items, searchLabel, onChoose, onChangeSearch, searchValue }: Props) {\r\n  return (\r\n    <div className=\"choose-component\">\r\n      {!!searchLabel && (\r\n        <TextField\r\n          label={searchLabel}\r\n          onChange={(e) => onChangeSearch && onChangeSearch(e.target.value)}\r\n          value={searchValue}\r\n        />\r\n      )}\r\n\r\n      {!searchLabel || !!searchValue ? (\r\n        <Paper className=\"paper\">\r\n          <List className=\"list\" dense={false}>\r\n            {items.map((ci) => (\r\n              <ListItem key={ci.id} selected={ci.selected} onClick={() => onChoose && onChoose(ci)} button={true}>\r\n                {ci.image && (\r\n                  <ListItemAvatar>\r\n                    <Avatar src={ci.image?.src} alt={ci.image.alt} />\r\n                  </ListItemAvatar>\r\n                )}\r\n                <ListItemText primary={ci.title} secondary={ci.description} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Paper>\r\n      ) : (\r\n        <Typography paragraph>Digite um termo a ser procurado</Typography>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}